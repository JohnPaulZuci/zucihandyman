/*
 * generated by Xtext 2.16.0
 */
package in.handyman.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ProcessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Process");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProcessKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTryAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTryTryParserRuleCall_3_0 = (RuleCall)cTryAssignment_3.eContents().get(0);
		private final Assignment cCatchAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCatchCatchParserRuleCall_4_0 = (RuleCall)cCatchAssignment_4.eContents().get(0);
		private final Assignment cFinallyAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFinallyFinallyParserRuleCall_5_0 = (RuleCall)cFinallyAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Process:
		//	'process' name=STRING
		//	'{'
		//	try=Try
		//	catch=Catch
		//	finally=Finally
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'process' name=STRING '{' try=Try catch=Catch finally=Finally '}'
		public Group getGroup() { return cGroup; }
		
		//'process'
		public Keyword getProcessKeyword_0() { return cProcessKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//try=Try
		public Assignment getTryAssignment_3() { return cTryAssignment_3; }
		
		//Try
		public RuleCall getTryTryParserRuleCall_3_0() { return cTryTryParserRuleCall_3_0; }
		
		//catch=Catch
		public Assignment getCatchAssignment_4() { return cCatchAssignment_4; }
		
		//Catch
		public RuleCall getCatchCatchParserRuleCall_4_0() { return cCatchCatchParserRuleCall_4_0; }
		
		//finally=Finally
		public Assignment getFinallyAssignment_5() { return cFinallyAssignment_5; }
		
		//Finally
		public RuleCall getFinallyFinallyParserRuleCall_5_0() { return cFinallyFinallyParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class TryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Try");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActionActionParserRuleCall_2_0 = (RuleCall)cActionAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Try:
		//	'try'
		//	'{'
		//	action+=Action*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'try' '{' action+=Action* '}'
		public Group getGroup() { return cGroup; }
		
		//'try'
		public Keyword getTryKeyword_0() { return cTryKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//action+=Action*
		public Assignment getActionAssignment_2() { return cActionAssignment_2; }
		
		//Action
		public RuleCall getActionActionParserRuleCall_2_0() { return cActionActionParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class FinallyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Finally");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFinallyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActionActionParserRuleCall_2_0 = (RuleCall)cActionAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Finally:
		//	'finally'
		//	'{'
		//	action+=Action*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'finally' '{' action+=Action* '}'
		public Group getGroup() { return cGroup; }
		
		//'finally'
		public Keyword getFinallyKeyword_0() { return cFinallyKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//action+=Action*
		public Assignment getActionAssignment_2() { return cActionAssignment_2; }
		
		//Action
		public RuleCall getActionActionParserRuleCall_2_0() { return cActionActionParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class CatchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Catch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCatchKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActionActionParserRuleCall_2_0 = (RuleCall)cActionAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Catch:
		//	'catch'
		//	'{'
		//	action+=Action*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'catch' '{' action+=Action* '}'
		public Group getGroup() { return cGroup; }
		
		//'catch'
		public Keyword getCatchKeyword_0() { return cCatchKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//action+=Action*
		public Assignment getActionAssignment_2() { return cActionAssignment_2; }
		
		//Action
		public RuleCall getActionActionParserRuleCall_2_0() { return cActionActionParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Action");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCopydataParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLoadCsvParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cWriteCsvParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTransformParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cCallprocessParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cForkprocessParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cFetchParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cDoozleParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cDropfileParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cAbortParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cExecJavaParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cDeleteFolderParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cTerminalParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cSendEMailParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cMongo2DbParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cFTPParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cUnzipParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cZipParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cChecksumParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cJsonTransformParserRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		private final RuleCall cRestApiParserRuleCall_20 = (RuleCall)cAlternatives.eContents().get(20);
		private final RuleCall cPythonParserRuleCall_21 = (RuleCall)cAlternatives.eContents().get(21);
		private final RuleCall cRestParserRuleCall_22 = (RuleCall)cAlternatives.eContents().get(22);
		private final RuleCall cJsonDeserializeParserRuleCall_23 = (RuleCall)cAlternatives.eContents().get(23);
		private final RuleCall cListFilesParserRuleCall_24 = (RuleCall)cAlternatives.eContents().get(24);
		private final RuleCall cDeleteSqlParserRuleCall_25 = (RuleCall)cAlternatives.eContents().get(25);
		private final RuleCall cUpdateSqlParserRuleCall_26 = (RuleCall)cAlternatives.eContents().get(26);
		private final RuleCall cInsertSqlParserRuleCall_27 = (RuleCall)cAlternatives.eContents().get(27);
		private final RuleCall cTruncateSqlParserRuleCall_28 = (RuleCall)cAlternatives.eContents().get(28);
		private final RuleCall cDropSqlParserRuleCall_29 = (RuleCall)cAlternatives.eContents().get(29);
		
		//Action:
		//	Copydata
		//	| LoadCsv
		//	| WriteCsv
		//	| Transform
		//	| Callprocess
		//	| Forkprocess
		//	| Fetch
		//	| Doozle
		//	| Dropfile
		//	| Abort
		//	| ExecJava
		//	| DeleteFolder
		//	| Terminal
		//	| SendEMail
		//	| Mongo2Db
		//	| FTP
		//	| Unzip
		//	| Zip
		//	| Checksum
		//	| JsonTransform
		//	| RestApi
		//	| Python
		//	| Rest
		//	| JsonDeserialize
		//	| ListFiles
		//	| DeleteSql
		//	| UpdateSql
		//	| InsertSql
		//	| TruncateSql
		//	| DropSql;
		@Override public ParserRule getRule() { return rule; }
		
		//Copydata | LoadCsv | WriteCsv | Transform | Callprocess | Forkprocess | Fetch | Doozle | Dropfile | Abort | ExecJava |
		//DeleteFolder | Terminal | SendEMail | Mongo2Db | FTP | Unzip | Zip | Checksum | JsonTransform | RestApi | Python |
		//Rest | JsonDeserialize | ListFiles | DeleteSql | UpdateSql | InsertSql | TruncateSql | DropSql
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Copydata
		public RuleCall getCopydataParserRuleCall_0() { return cCopydataParserRuleCall_0; }
		
		//LoadCsv
		public RuleCall getLoadCsvParserRuleCall_1() { return cLoadCsvParserRuleCall_1; }
		
		//WriteCsv
		public RuleCall getWriteCsvParserRuleCall_2() { return cWriteCsvParserRuleCall_2; }
		
		//Transform
		public RuleCall getTransformParserRuleCall_3() { return cTransformParserRuleCall_3; }
		
		//Callprocess
		public RuleCall getCallprocessParserRuleCall_4() { return cCallprocessParserRuleCall_4; }
		
		//Forkprocess
		public RuleCall getForkprocessParserRuleCall_5() { return cForkprocessParserRuleCall_5; }
		
		//Fetch
		public RuleCall getFetchParserRuleCall_6() { return cFetchParserRuleCall_6; }
		
		//Doozle
		public RuleCall getDoozleParserRuleCall_7() { return cDoozleParserRuleCall_7; }
		
		//Dropfile
		public RuleCall getDropfileParserRuleCall_8() { return cDropfileParserRuleCall_8; }
		
		//Abort
		public RuleCall getAbortParserRuleCall_9() { return cAbortParserRuleCall_9; }
		
		//ExecJava
		public RuleCall getExecJavaParserRuleCall_10() { return cExecJavaParserRuleCall_10; }
		
		//DeleteFolder
		public RuleCall getDeleteFolderParserRuleCall_11() { return cDeleteFolderParserRuleCall_11; }
		
		//Terminal
		public RuleCall getTerminalParserRuleCall_12() { return cTerminalParserRuleCall_12; }
		
		//SendEMail
		public RuleCall getSendEMailParserRuleCall_13() { return cSendEMailParserRuleCall_13; }
		
		//Mongo2Db
		public RuleCall getMongo2DbParserRuleCall_14() { return cMongo2DbParserRuleCall_14; }
		
		//FTP
		public RuleCall getFTPParserRuleCall_15() { return cFTPParserRuleCall_15; }
		
		//Unzip
		public RuleCall getUnzipParserRuleCall_16() { return cUnzipParserRuleCall_16; }
		
		//Zip
		public RuleCall getZipParserRuleCall_17() { return cZipParserRuleCall_17; }
		
		//Checksum
		public RuleCall getChecksumParserRuleCall_18() { return cChecksumParserRuleCall_18; }
		
		//JsonTransform
		public RuleCall getJsonTransformParserRuleCall_19() { return cJsonTransformParserRuleCall_19; }
		
		//RestApi
		public RuleCall getRestApiParserRuleCall_20() { return cRestApiParserRuleCall_20; }
		
		//Python
		public RuleCall getPythonParserRuleCall_21() { return cPythonParserRuleCall_21; }
		
		//Rest
		public RuleCall getRestParserRuleCall_22() { return cRestParserRuleCall_22; }
		
		//JsonDeserialize
		public RuleCall getJsonDeserializeParserRuleCall_23() { return cJsonDeserializeParserRuleCall_23; }
		
		//ListFiles
		public RuleCall getListFilesParserRuleCall_24() { return cListFilesParserRuleCall_24; }
		
		//DeleteSql
		public RuleCall getDeleteSqlParserRuleCall_25() { return cDeleteSqlParserRuleCall_25; }
		
		//UpdateSql
		public RuleCall getUpdateSqlParserRuleCall_26() { return cUpdateSqlParserRuleCall_26; }
		
		//InsertSql
		public RuleCall getInsertSqlParserRuleCall_27() { return cInsertSqlParserRuleCall_27; }
		
		//TruncateSql
		public RuleCall getTruncateSqlParserRuleCall_28() { return cTruncateSqlParserRuleCall_28; }
		
		//DropSql
		public RuleCall getDropSqlParserRuleCall_29() { return cDropSqlParserRuleCall_29; }
	}
	public class SendEMailElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.SendEMail");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSendemailKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cDbKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceSTRINGTerminalRuleCall_4_0 = (RuleCall)cSourceAssignment_4.eContents().get(0);
		private final Keyword cSmtpHostKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSmtphostAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSmtphostSTRINGTerminalRuleCall_6_0 = (RuleCall)cSmtphostAssignment_6.eContents().get(0);
		private final Keyword cSmtpPortKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSmtpportAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSmtpportSTRINGTerminalRuleCall_8_0 = (RuleCall)cSmtpportAssignment_8.eContents().get(0);
		private final Keyword cFromKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cFromAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cFromSTRINGTerminalRuleCall_10_0 = (RuleCall)cFromAssignment_10.eContents().get(0);
		private final Keyword cPassKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cPassAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cPassSTRINGTerminalRuleCall_12_0 = (RuleCall)cPassAssignment_12.eContents().get(0);
		private final Keyword cToKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cToAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cToSTRINGTerminalRuleCall_14_0 = (RuleCall)cToAssignment_14.eContents().get(0);
		private final Keyword cCcKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cCcAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cCcSTRINGTerminalRuleCall_16_0 = (RuleCall)cCcAssignment_16.eContents().get(0);
		private final Keyword cBccKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cBccAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cBccSTRINGTerminalRuleCall_18_0 = (RuleCall)cBccAssignment_18.eContents().get(0);
		private final Keyword cSubjectKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Assignment cSubjectAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final RuleCall cSubjectSTRINGTerminalRuleCall_20_0 = (RuleCall)cSubjectAssignment_20.eContents().get(0);
		private final Keyword cBodyKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Assignment cBodyAssignment_22 = (Assignment)cGroup.eContents().get(22);
		private final RuleCall cBodySTRINGTerminalRuleCall_22_0 = (RuleCall)cBodyAssignment_22.eContents().get(0);
		private final Keyword cSignatureKeyword_23 = (Keyword)cGroup.eContents().get(23);
		private final Assignment cSignatureAssignment_24 = (Assignment)cGroup.eContents().get(24);
		private final RuleCall cSignatureSTRINGTerminalRuleCall_24_0 = (RuleCall)cSignatureAssignment_24.eContents().get(0);
		private final Keyword cUsingKeyword_25 = (Keyword)cGroup.eContents().get(25);
		private final Keyword cLeftCurlyBracketKeyword_26 = (Keyword)cGroup.eContents().get(26);
		private final Assignment cValueAssignment_27 = (Assignment)cGroup.eContents().get(27);
		private final RuleCall cValueSelectStatementParserRuleCall_27_0 = (RuleCall)cValueAssignment_27.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_28 = (Keyword)cGroup.eContents().get(28);
		private final Keyword cOnConditionKeyword_29 = (Keyword)cGroup.eContents().get(29);
		private final Assignment cConditionAssignment_30 = (Assignment)cGroup.eContents().get(30);
		private final RuleCall cConditionExpressionParserRuleCall_30_0 = (RuleCall)cConditionAssignment_30.eContents().get(0);
		
		//SendEMail:
		//	'sendemail' 'as' name=STRING 'db' source=STRING 'smtp-host' smtphost=STRING 'smtp-port' smtpport=STRING
		//	'from' from=STRING 'pass' pass=STRING 'to' to=STRING 'cc' cc=STRING
		//	'bcc' bcc=STRING 'subject' subject=STRING 'body' body=STRING 'signature' signature=STRING 'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'sendemail' 'as' name=STRING 'db' source=STRING 'smtp-host' smtphost=STRING 'smtp-port' smtpport=STRING 'from'
		//from=STRING 'pass' pass=STRING 'to' to=STRING 'cc' cc=STRING 'bcc' bcc=STRING 'subject' subject=STRING 'body'
		//body=STRING 'signature' signature=STRING 'using' '{' value=SelectStatement '}' 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'sendemail'
		public Keyword getSendemailKeyword_0() { return cSendemailKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'db'
		public Keyword getDbKeyword_3() { return cDbKeyword_3; }
		
		//source=STRING
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_4_0() { return cSourceSTRINGTerminalRuleCall_4_0; }
		
		//'smtp-host'
		public Keyword getSmtpHostKeyword_5() { return cSmtpHostKeyword_5; }
		
		//smtphost=STRING
		public Assignment getSmtphostAssignment_6() { return cSmtphostAssignment_6; }
		
		//STRING
		public RuleCall getSmtphostSTRINGTerminalRuleCall_6_0() { return cSmtphostSTRINGTerminalRuleCall_6_0; }
		
		//'smtp-port'
		public Keyword getSmtpPortKeyword_7() { return cSmtpPortKeyword_7; }
		
		//smtpport=STRING
		public Assignment getSmtpportAssignment_8() { return cSmtpportAssignment_8; }
		
		//STRING
		public RuleCall getSmtpportSTRINGTerminalRuleCall_8_0() { return cSmtpportSTRINGTerminalRuleCall_8_0; }
		
		//'from'
		public Keyword getFromKeyword_9() { return cFromKeyword_9; }
		
		//from=STRING
		public Assignment getFromAssignment_10() { return cFromAssignment_10; }
		
		//STRING
		public RuleCall getFromSTRINGTerminalRuleCall_10_0() { return cFromSTRINGTerminalRuleCall_10_0; }
		
		//'pass'
		public Keyword getPassKeyword_11() { return cPassKeyword_11; }
		
		//pass=STRING
		public Assignment getPassAssignment_12() { return cPassAssignment_12; }
		
		//STRING
		public RuleCall getPassSTRINGTerminalRuleCall_12_0() { return cPassSTRINGTerminalRuleCall_12_0; }
		
		//'to'
		public Keyword getToKeyword_13() { return cToKeyword_13; }
		
		//to=STRING
		public Assignment getToAssignment_14() { return cToAssignment_14; }
		
		//STRING
		public RuleCall getToSTRINGTerminalRuleCall_14_0() { return cToSTRINGTerminalRuleCall_14_0; }
		
		//'cc'
		public Keyword getCcKeyword_15() { return cCcKeyword_15; }
		
		//cc=STRING
		public Assignment getCcAssignment_16() { return cCcAssignment_16; }
		
		//STRING
		public RuleCall getCcSTRINGTerminalRuleCall_16_0() { return cCcSTRINGTerminalRuleCall_16_0; }
		
		//'bcc'
		public Keyword getBccKeyword_17() { return cBccKeyword_17; }
		
		//bcc=STRING
		public Assignment getBccAssignment_18() { return cBccAssignment_18; }
		
		//STRING
		public RuleCall getBccSTRINGTerminalRuleCall_18_0() { return cBccSTRINGTerminalRuleCall_18_0; }
		
		//'subject'
		public Keyword getSubjectKeyword_19() { return cSubjectKeyword_19; }
		
		//subject=STRING
		public Assignment getSubjectAssignment_20() { return cSubjectAssignment_20; }
		
		//STRING
		public RuleCall getSubjectSTRINGTerminalRuleCall_20_0() { return cSubjectSTRINGTerminalRuleCall_20_0; }
		
		//'body'
		public Keyword getBodyKeyword_21() { return cBodyKeyword_21; }
		
		//body=STRING
		public Assignment getBodyAssignment_22() { return cBodyAssignment_22; }
		
		//STRING
		public RuleCall getBodySTRINGTerminalRuleCall_22_0() { return cBodySTRINGTerminalRuleCall_22_0; }
		
		//'signature'
		public Keyword getSignatureKeyword_23() { return cSignatureKeyword_23; }
		
		//signature=STRING
		public Assignment getSignatureAssignment_24() { return cSignatureAssignment_24; }
		
		//STRING
		public RuleCall getSignatureSTRINGTerminalRuleCall_24_0() { return cSignatureSTRINGTerminalRuleCall_24_0; }
		
		//'using'
		public Keyword getUsingKeyword_25() { return cUsingKeyword_25; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_26() { return cLeftCurlyBracketKeyword_26; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_27() { return cValueAssignment_27; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_27_0() { return cValueSelectStatementParserRuleCall_27_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_28() { return cRightCurlyBracketKeyword_28; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_29() { return cOnConditionKeyword_29; }
		
		//condition=Expression
		public Assignment getConditionAssignment_30() { return cConditionAssignment_30; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_30_0() { return cConditionExpressionParserRuleCall_30_0; }
	}
	public class DeleteFolderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.DeleteFolder");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeletefolderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cFolderKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFoldersourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFoldersourceSTRINGTerminalRuleCall_4_0 = (RuleCall)cFoldersourceAssignment_4.eContents().get(0);
		private final Keyword cZipfileKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cZipsourceAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cZipsourceSTRINGTerminalRuleCall_6_0 = (RuleCall)cZipsourceAssignment_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cValueAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cValueSelectStatementParserRuleCall_8_0 = (RuleCall)cValueAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cOnConditionKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cConditionAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cConditionExpressionParserRuleCall_11_0 = (RuleCall)cConditionAssignment_11.eContents().get(0);
		
		//DeleteFolder:
		//	'deletefolder' 'as' name=STRING 'folder' foldersource=STRING 'zipfile' zipsource=STRING
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'deletefolder' 'as' name=STRING 'folder' foldersource=STRING 'zipfile' zipsource=STRING '{' value=SelectStatement '}'
		//'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'deletefolder'
		public Keyword getDeletefolderKeyword_0() { return cDeletefolderKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'folder'
		public Keyword getFolderKeyword_3() { return cFolderKeyword_3; }
		
		//foldersource=STRING
		public Assignment getFoldersourceAssignment_4() { return cFoldersourceAssignment_4; }
		
		//STRING
		public RuleCall getFoldersourceSTRINGTerminalRuleCall_4_0() { return cFoldersourceSTRINGTerminalRuleCall_4_0; }
		
		//'zipfile'
		public Keyword getZipfileKeyword_5() { return cZipfileKeyword_5; }
		
		//zipsource=STRING
		public Assignment getZipsourceAssignment_6() { return cZipsourceAssignment_6; }
		
		//STRING
		public RuleCall getZipsourceSTRINGTerminalRuleCall_6_0() { return cZipsourceSTRINGTerminalRuleCall_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_8() { return cValueAssignment_8; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_8_0() { return cValueSelectStatementParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_10() { return cOnConditionKeyword_10; }
		
		//condition=Expression
		public Assignment getConditionAssignment_11() { return cConditionAssignment_11; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_11_0() { return cConditionExpressionParserRuleCall_11_0; }
	}
	public class TerminalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Terminal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTerminalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cIdKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdSTRINGTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final Keyword cUsingKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueSTRINGTerminalRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cOnConditionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cConditionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cConditionExpressionParserRuleCall_10_0 = (RuleCall)cConditionAssignment_10.eContents().get(0);
		
		//Terminal:
		//	'terminal' 'as' name=STRING 'id' id=STRING 'using'
		//	'{'
		//	value=STRING
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'terminal' 'as' name=STRING 'id' id=STRING 'using' '{' value=STRING '}' 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'terminal'
		public Keyword getTerminalKeyword_0() { return cTerminalKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'id'
		public Keyword getIdKeyword_3() { return cIdKeyword_3; }
		
		//id=STRING
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }
		
		//STRING
		public RuleCall getIdSTRINGTerminalRuleCall_4_0() { return cIdSTRINGTerminalRuleCall_4_0; }
		
		//'using'
		public Keyword getUsingKeyword_5() { return cUsingKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//value=STRING
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_7_0() { return cValueSTRINGTerminalRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_9() { return cOnConditionKeyword_9; }
		
		//condition=Expression
		public Assignment getConditionAssignment_10() { return cConditionAssignment_10; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_10_0() { return cConditionExpressionParserRuleCall_10_0; }
	}
	public class ExecJavaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.ExecJava");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJavaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cUsingKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cClassFqnAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cClassFqnSTRINGTerminalRuleCall_4_0 = (RuleCall)cClassFqnAssignment_4.eContents().get(0);
		private final Keyword cNameSakeDbKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDbSrcAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDbSrcSTRINGTerminalRuleCall_6_0 = (RuleCall)cDbSrcAssignment_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cValueAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cValueSTRINGTerminalRuleCall_8_0 = (RuleCall)cValueAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cOnConditionKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cConditionAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cConditionExpressionParserRuleCall_11_0 = (RuleCall)cConditionAssignment_11.eContents().get(0);
		
		//ExecJava:
		//	"java" 'as' name=STRING 'using' classFqn=STRING 'name-sake-db' dbSrc=STRING
		//	'{'
		//	value=STRING
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//"java" 'as' name=STRING 'using' classFqn=STRING 'name-sake-db' dbSrc=STRING '{' value=STRING '}' 'on-condition'
		//condition=Expression
		public Group getGroup() { return cGroup; }
		
		//"java"
		public Keyword getJavaKeyword_0() { return cJavaKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'using'
		public Keyword getUsingKeyword_3() { return cUsingKeyword_3; }
		
		//classFqn=STRING
		public Assignment getClassFqnAssignment_4() { return cClassFqnAssignment_4; }
		
		//STRING
		public RuleCall getClassFqnSTRINGTerminalRuleCall_4_0() { return cClassFqnSTRINGTerminalRuleCall_4_0; }
		
		//'name-sake-db'
		public Keyword getNameSakeDbKeyword_5() { return cNameSakeDbKeyword_5; }
		
		//dbSrc=STRING
		public Assignment getDbSrcAssignment_6() { return cDbSrcAssignment_6; }
		
		//STRING
		public RuleCall getDbSrcSTRINGTerminalRuleCall_6_0() { return cDbSrcSTRINGTerminalRuleCall_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//value=STRING
		public Assignment getValueAssignment_8() { return cValueAssignment_8; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_8_0() { return cValueSTRINGTerminalRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_10() { return cOnConditionKeyword_10; }
		
		//condition=Expression
		public Assignment getConditionAssignment_11() { return cConditionAssignment_11; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_11_0() { return cConditionExpressionParserRuleCall_11_0; }
	}
	public class AbortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Abort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAbortKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueSTRINGTerminalRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cOnConditionKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cConditionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cConditionExpressionParserRuleCall_7_0 = (RuleCall)cConditionAssignment_7.eContents().get(0);
		
		//Abort:
		//	'abort' 'as' name=STRING
		//	'{'
		//	value=STRING
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'abort' 'as' name=STRING '{' value=STRING '}' 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'abort'
		public Keyword getAbortKeyword_0() { return cAbortKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//value=STRING
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_4_0() { return cValueSTRINGTerminalRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_6() { return cOnConditionKeyword_6; }
		
		//condition=Expression
		public Assignment getConditionAssignment_7() { return cConditionAssignment_7; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_7_0() { return cConditionExpressionParserRuleCall_7_0; }
	}
	public class DropfileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Dropfile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDropfileKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cInPathKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTargetAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTargetSTRINGTerminalRuleCall_4_0 = (RuleCall)cTargetAssignment_4.eContents().get(0);
		private final Keyword cOnConditionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cConditionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cConditionExpressionParserRuleCall_6_0 = (RuleCall)cConditionAssignment_6.eContents().get(0);
		
		//Dropfile:
		//	'dropfile' 'as' name=STRING 'in-path' target=STRING 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'dropfile' 'as' name=STRING 'in-path' target=STRING 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'dropfile'
		public Keyword getDropfileKeyword_0() { return cDropfileKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'in-path'
		public Keyword getInPathKeyword_3() { return cInPathKeyword_3; }
		
		//target=STRING
		public Assignment getTargetAssignment_4() { return cTargetAssignment_4; }
		
		//STRING
		public RuleCall getTargetSTRINGTerminalRuleCall_4_0() { return cTargetSTRINGTerminalRuleCall_4_0; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_5() { return cOnConditionKeyword_5; }
		
		//condition=Expression
		public Assignment getConditionAssignment_6() { return cConditionAssignment_6; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_6_0() { return cConditionExpressionParserRuleCall_6_0; }
	}
	public class DoozleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Doozle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDoozleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cInTableKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTargetAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTargetSTRINGTerminalRuleCall_4_0 = (RuleCall)cTargetAssignment_4.eContents().get(0);
		private final Keyword cOnKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cOnAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cOnSTRINGTerminalRuleCall_6_0 = (RuleCall)cOnAssignment_6.eContents().get(0);
		private final Keyword cUsingKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cValueAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cValueCreateStatementParserRuleCall_9_0 = (RuleCall)cValueAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cOnConditionKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cConditionAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cConditionExpressionParserRuleCall_12_0 = (RuleCall)cConditionAssignment_12.eContents().get(0);
		
		//Doozle:
		//	'doozle' 'as' name=STRING 'in-table' target=STRING 'on' on=STRING 'using'
		//	'{'
		//	value=CreateStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'doozle' 'as' name=STRING 'in-table' target=STRING 'on' on=STRING 'using' '{' value=CreateStatement '}' 'on-condition'
		//condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'doozle'
		public Keyword getDoozleKeyword_0() { return cDoozleKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'in-table'
		public Keyword getInTableKeyword_3() { return cInTableKeyword_3; }
		
		//target=STRING
		public Assignment getTargetAssignment_4() { return cTargetAssignment_4; }
		
		//STRING
		public RuleCall getTargetSTRINGTerminalRuleCall_4_0() { return cTargetSTRINGTerminalRuleCall_4_0; }
		
		//'on'
		public Keyword getOnKeyword_5() { return cOnKeyword_5; }
		
		//on=STRING
		public Assignment getOnAssignment_6() { return cOnAssignment_6; }
		
		//STRING
		public RuleCall getOnSTRINGTerminalRuleCall_6_0() { return cOnSTRINGTerminalRuleCall_6_0; }
		
		//'using'
		public Keyword getUsingKeyword_7() { return cUsingKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//value=CreateStatement
		public Assignment getValueAssignment_9() { return cValueAssignment_9; }
		
		//CreateStatement
		public RuleCall getValueCreateStatementParserRuleCall_9_0() { return cValueCreateStatementParserRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_11() { return cOnConditionKeyword_11; }
		
		//condition=Expression
		public Assignment getConditionAssignment_12() { return cConditionAssignment_12; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_12_0() { return cConditionExpressionParserRuleCall_12_0; }
	}
	public class FetchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Fetch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSourceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceSTRINGTerminalRuleCall_4_0 = (RuleCall)cSourceAssignment_4.eContents().get(0);
		private final Keyword cUsingKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueSTRINGTerminalRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cOnConditionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cConditionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cConditionExpressionParserRuleCall_10_0 = (RuleCall)cConditionAssignment_10.eContents().get(0);
		
		//Fetch:
		//	'assign' 'as' name=STRING 'source' source=STRING 'using'
		//	'{'
		//	value=STRING
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'assign' 'as' name=STRING 'source' source=STRING 'using' '{' value=STRING '}' 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'assign'
		public Keyword getAssignKeyword_0() { return cAssignKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'source'
		public Keyword getSourceKeyword_3() { return cSourceKeyword_3; }
		
		//source=STRING
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_4_0() { return cSourceSTRINGTerminalRuleCall_4_0; }
		
		//'using'
		public Keyword getUsingKeyword_5() { return cUsingKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//value=STRING
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_7_0() { return cValueSTRINGTerminalRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_9() { return cOnConditionKeyword_9; }
		
		//condition=Expression
		public Assignment getConditionAssignment_10() { return cConditionAssignment_10; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_10_0() { return cConditionExpressionParserRuleCall_10_0; }
	}
	public class CallprocessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Callprocess");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCallprocessKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cWithTargetKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTargetAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTargetSTRINGTerminalRuleCall_4_0 = (RuleCall)cTargetAssignment_4.eContents().get(0);
		private final Keyword cFromFileKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSourceAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSourceSTRINGTerminalRuleCall_6_0 = (RuleCall)cSourceAssignment_6.eContents().get(0);
		private final Keyword cUsingKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cDatasourceAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDatasourceSTRINGTerminalRuleCall_8_0 = (RuleCall)cDatasourceAssignment_8.eContents().get(0);
		private final Keyword cForEveryKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cValueAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cValueSelectStatementParserRuleCall_11_0 = (RuleCall)cValueAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cOnConditionKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cConditionAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cConditionExpressionParserRuleCall_14_0 = (RuleCall)cConditionAssignment_14.eContents().get(0);
		
		//Callprocess:
		//	'callprocess' 'as' name=STRING 'with-target' target=STRING 'from-file' source=STRING 'using' datasource=STRING
		//	'for-every'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'callprocess' 'as' name=STRING 'with-target' target=STRING 'from-file' source=STRING 'using' datasource=STRING
		//'for-every' '{' value=SelectStatement '}' 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'callprocess'
		public Keyword getCallprocessKeyword_0() { return cCallprocessKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'with-target'
		public Keyword getWithTargetKeyword_3() { return cWithTargetKeyword_3; }
		
		//target=STRING
		public Assignment getTargetAssignment_4() { return cTargetAssignment_4; }
		
		//STRING
		public RuleCall getTargetSTRINGTerminalRuleCall_4_0() { return cTargetSTRINGTerminalRuleCall_4_0; }
		
		//'from-file'
		public Keyword getFromFileKeyword_5() { return cFromFileKeyword_5; }
		
		//source=STRING
		public Assignment getSourceAssignment_6() { return cSourceAssignment_6; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_6_0() { return cSourceSTRINGTerminalRuleCall_6_0; }
		
		//'using'
		public Keyword getUsingKeyword_7() { return cUsingKeyword_7; }
		
		//datasource=STRING
		public Assignment getDatasourceAssignment_8() { return cDatasourceAssignment_8; }
		
		//STRING
		public RuleCall getDatasourceSTRINGTerminalRuleCall_8_0() { return cDatasourceSTRINGTerminalRuleCall_8_0; }
		
		//'for-every'
		public Keyword getForEveryKeyword_9() { return cForEveryKeyword_9; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_11() { return cValueAssignment_11; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_11_0() { return cValueSelectStatementParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_13() { return cOnConditionKeyword_13; }
		
		//condition=Expression
		public Assignment getConditionAssignment_14() { return cConditionAssignment_14; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_14_0() { return cConditionExpressionParserRuleCall_14_0; }
	}
	public class ForkprocessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Forkprocess");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cForkprocessKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cWithTargetKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTargetAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTargetSTRINGTerminalRuleCall_4_0 = (RuleCall)cTargetAssignment_4.eContents().get(0);
		private final Keyword cFromFileKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSourceAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSourceSTRINGTerminalRuleCall_6_0 = (RuleCall)cSourceAssignment_6.eContents().get(0);
		private final Keyword cUsingKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cDatasourceAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDatasourceSTRINGTerminalRuleCall_8_0 = (RuleCall)cDatasourceAssignment_8.eContents().get(0);
		private final Keyword cForEveryKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cValueAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cValueSelectStatementParserRuleCall_11_0 = (RuleCall)cValueAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cWatermarkKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cForkBatchSizeAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cForkBatchSizeSTRINGTerminalRuleCall_14_0 = (RuleCall)cForkBatchSizeAssignment_14.eContents().get(0);
		private final Keyword cOnConditionKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cConditionAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cConditionExpressionParserRuleCall_16_0 = (RuleCall)cConditionAssignment_16.eContents().get(0);
		
		//Forkprocess:
		//	'forkprocess' 'as' name=STRING 'with-target' target=STRING 'from-file' source=STRING 'using' datasource=STRING
		//	'for-every'
		//	'{'
		//	value=SelectStatement
		//	'}' 'watermark' forkBatchSize=STRING 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'forkprocess' 'as' name=STRING 'with-target' target=STRING 'from-file' source=STRING 'using' datasource=STRING
		//'for-every' '{' value=SelectStatement '}' 'watermark' forkBatchSize=STRING 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'forkprocess'
		public Keyword getForkprocessKeyword_0() { return cForkprocessKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'with-target'
		public Keyword getWithTargetKeyword_3() { return cWithTargetKeyword_3; }
		
		//target=STRING
		public Assignment getTargetAssignment_4() { return cTargetAssignment_4; }
		
		//STRING
		public RuleCall getTargetSTRINGTerminalRuleCall_4_0() { return cTargetSTRINGTerminalRuleCall_4_0; }
		
		//'from-file'
		public Keyword getFromFileKeyword_5() { return cFromFileKeyword_5; }
		
		//source=STRING
		public Assignment getSourceAssignment_6() { return cSourceAssignment_6; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_6_0() { return cSourceSTRINGTerminalRuleCall_6_0; }
		
		//'using'
		public Keyword getUsingKeyword_7() { return cUsingKeyword_7; }
		
		//datasource=STRING
		public Assignment getDatasourceAssignment_8() { return cDatasourceAssignment_8; }
		
		//STRING
		public RuleCall getDatasourceSTRINGTerminalRuleCall_8_0() { return cDatasourceSTRINGTerminalRuleCall_8_0; }
		
		//'for-every'
		public Keyword getForEveryKeyword_9() { return cForEveryKeyword_9; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_11() { return cValueAssignment_11; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_11_0() { return cValueSelectStatementParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
		
		//'watermark'
		public Keyword getWatermarkKeyword_13() { return cWatermarkKeyword_13; }
		
		//forkBatchSize=STRING
		public Assignment getForkBatchSizeAssignment_14() { return cForkBatchSizeAssignment_14; }
		
		//STRING
		public RuleCall getForkBatchSizeSTRINGTerminalRuleCall_14_0() { return cForkBatchSizeSTRINGTerminalRuleCall_14_0; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_15() { return cOnConditionKeyword_15; }
		
		//condition=Expression
		public Assignment getConditionAssignment_16() { return cConditionAssignment_16; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_16_0() { return cConditionExpressionParserRuleCall_16_0; }
	}
	public class CopydataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Copydata");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCopydataKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceSTRINGTerminalRuleCall_4_0 = (RuleCall)cSourceAssignment_4.eContents().get(0);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cToAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cToSTRINGTerminalRuleCall_6_0 = (RuleCall)cToAssignment_6.eContents().get(0);
		private final Keyword cTargetKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTargetAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTargetSTRINGTerminalRuleCall_8_0 = (RuleCall)cTargetAssignment_8.eContents().get(0);
		private final Keyword cByBatchKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cLimitAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cLimitSTRINGTerminalRuleCall_10_0 = (RuleCall)cLimitAssignment_10.eContents().get(0);
		private final Keyword cUsingKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cValueAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cValueSelectStatementParserRuleCall_13_0 = (RuleCall)cValueAssignment_13.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cOnConditionKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cConditionAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cConditionExpressionParserRuleCall_16_0 = (RuleCall)cConditionAssignment_16.eContents().get(0);
		
		//Copydata:
		//	'copydata' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'target' target=STRING 'by-batch' limit=STRING
		//	'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'copydata' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'target' target=STRING 'by-batch' limit=STRING 'using'
		//'{' value=SelectStatement '}' 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'copydata'
		public Keyword getCopydataKeyword_0() { return cCopydataKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//source=STRING
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_4_0() { return cSourceSTRINGTerminalRuleCall_4_0; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//to=STRING
		public Assignment getToAssignment_6() { return cToAssignment_6; }
		
		//STRING
		public RuleCall getToSTRINGTerminalRuleCall_6_0() { return cToSTRINGTerminalRuleCall_6_0; }
		
		//'target'
		public Keyword getTargetKeyword_7() { return cTargetKeyword_7; }
		
		//target=STRING
		public Assignment getTargetAssignment_8() { return cTargetAssignment_8; }
		
		//STRING
		public RuleCall getTargetSTRINGTerminalRuleCall_8_0() { return cTargetSTRINGTerminalRuleCall_8_0; }
		
		//'by-batch'
		public Keyword getByBatchKeyword_9() { return cByBatchKeyword_9; }
		
		//limit=STRING
		public Assignment getLimitAssignment_10() { return cLimitAssignment_10; }
		
		//STRING
		public RuleCall getLimitSTRINGTerminalRuleCall_10_0() { return cLimitSTRINGTerminalRuleCall_10_0; }
		
		//'using'
		public Keyword getUsingKeyword_11() { return cUsingKeyword_11; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12() { return cLeftCurlyBracketKeyword_12; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_13() { return cValueAssignment_13; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_13_0() { return cValueSelectStatementParserRuleCall_13_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_15() { return cOnConditionKeyword_15; }
		
		//condition=Expression
		public Assignment getConditionAssignment_16() { return cConditionAssignment_16; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_16_0() { return cConditionExpressionParserRuleCall_16_0; }
	}
	public class WriteCsvElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.WriteCsv");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWritecsvKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceSTRINGTerminalRuleCall_4_0 = (RuleCall)cSourceAssignment_4.eContents().get(0);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cToAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cToSTRINGTerminalRuleCall_6_0 = (RuleCall)cToAssignment_6.eContents().get(0);
		private final Keyword cWithKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cDelimAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDelimSTRINGTerminalRuleCall_8_0 = (RuleCall)cDelimAssignment_8.eContents().get(0);
		private final Keyword cUsingKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cValueAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cValueSelectStatementParserRuleCall_11_0 = (RuleCall)cValueAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cOnConditionKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cConditionAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cConditionExpressionParserRuleCall_14_0 = (RuleCall)cConditionAssignment_14.eContents().get(0);
		
		//WriteCsv:
		//	'writecsv' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'with' delim=STRING 'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'writecsv' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'with' delim=STRING 'using' '{' value=SelectStatement
		//'}' 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'writecsv'
		public Keyword getWritecsvKeyword_0() { return cWritecsvKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//source=STRING
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_4_0() { return cSourceSTRINGTerminalRuleCall_4_0; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//to=STRING
		public Assignment getToAssignment_6() { return cToAssignment_6; }
		
		//STRING
		public RuleCall getToSTRINGTerminalRuleCall_6_0() { return cToSTRINGTerminalRuleCall_6_0; }
		
		//'with'
		public Keyword getWithKeyword_7() { return cWithKeyword_7; }
		
		//delim=STRING
		public Assignment getDelimAssignment_8() { return cDelimAssignment_8; }
		
		//STRING
		public RuleCall getDelimSTRINGTerminalRuleCall_8_0() { return cDelimSTRINGTerminalRuleCall_8_0; }
		
		//'using'
		public Keyword getUsingKeyword_9() { return cUsingKeyword_9; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_11() { return cValueAssignment_11; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_11_0() { return cValueSelectStatementParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_13() { return cOnConditionKeyword_13; }
		
		//condition=Expression
		public Assignment getConditionAssignment_14() { return cConditionAssignment_14; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_14_0() { return cConditionExpressionParserRuleCall_14_0; }
	}
	public class LoadCsvElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.LoadCsv");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLoadcsvKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cPidKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPidAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPidSTRINGTerminalRuleCall_4_0 = (RuleCall)cPidAssignment_4.eContents().get(0);
		private final Keyword cFromKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSourceAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSourceSTRINGTerminalRuleCall_6_0 = (RuleCall)cSourceAssignment_6.eContents().get(0);
		private final Keyword cToKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cToAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cToSTRINGTerminalRuleCall_8_0 = (RuleCall)cToAssignment_8.eContents().get(0);
		private final Keyword cWithKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cDelimAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cDelimSTRINGTerminalRuleCall_10_0 = (RuleCall)cDelimAssignment_10.eContents().get(0);
		private final Keyword cByBatchKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cLimitAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cLimitSTRINGTerminalRuleCall_12_0 = (RuleCall)cLimitAssignment_12.eContents().get(0);
		private final Keyword cUsingKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cLeftCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cValueAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cValueSelectStatementParserRuleCall_15_0 = (RuleCall)cValueAssignment_15.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cOnConditionKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cConditionAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cConditionExpressionParserRuleCall_18_0 = (RuleCall)cConditionAssignment_18.eContents().get(0);
		
		//LoadCsv:
		//	'loadcsv' 'as' name=STRING 'pid' pid=STRING 'from' source=STRING 'to' to=STRING 'with' delim=STRING 'by-batch'
		//	limit=STRING 'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'loadcsv' 'as' name=STRING 'pid' pid=STRING 'from' source=STRING 'to' to=STRING 'with' delim=STRING 'by-batch'
		//limit=STRING 'using' '{' value=SelectStatement '}' 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'loadcsv'
		public Keyword getLoadcsvKeyword_0() { return cLoadcsvKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'pid'
		public Keyword getPidKeyword_3() { return cPidKeyword_3; }
		
		//pid=STRING
		public Assignment getPidAssignment_4() { return cPidAssignment_4; }
		
		//STRING
		public RuleCall getPidSTRINGTerminalRuleCall_4_0() { return cPidSTRINGTerminalRuleCall_4_0; }
		
		//'from'
		public Keyword getFromKeyword_5() { return cFromKeyword_5; }
		
		//source=STRING
		public Assignment getSourceAssignment_6() { return cSourceAssignment_6; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_6_0() { return cSourceSTRINGTerminalRuleCall_6_0; }
		
		//'to'
		public Keyword getToKeyword_7() { return cToKeyword_7; }
		
		//to=STRING
		public Assignment getToAssignment_8() { return cToAssignment_8; }
		
		//STRING
		public RuleCall getToSTRINGTerminalRuleCall_8_0() { return cToSTRINGTerminalRuleCall_8_0; }
		
		//'with'
		public Keyword getWithKeyword_9() { return cWithKeyword_9; }
		
		//delim=STRING
		public Assignment getDelimAssignment_10() { return cDelimAssignment_10; }
		
		//STRING
		public RuleCall getDelimSTRINGTerminalRuleCall_10_0() { return cDelimSTRINGTerminalRuleCall_10_0; }
		
		//'by-batch'
		public Keyword getByBatchKeyword_11() { return cByBatchKeyword_11; }
		
		//limit=STRING
		public Assignment getLimitAssignment_12() { return cLimitAssignment_12; }
		
		//STRING
		public RuleCall getLimitSTRINGTerminalRuleCall_12_0() { return cLimitSTRINGTerminalRuleCall_12_0; }
		
		//'using'
		public Keyword getUsingKeyword_13() { return cUsingKeyword_13; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14() { return cLeftCurlyBracketKeyword_14; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_15() { return cValueAssignment_15; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_15_0() { return cValueSelectStatementParserRuleCall_15_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_17() { return cOnConditionKeyword_17; }
		
		//condition=Expression
		public Assignment getConditionAssignment_18() { return cConditionAssignment_18; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_18_0() { return cConditionExpressionParserRuleCall_18_0; }
	}
	public class TransformElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Transform");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransformKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cOnKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOnAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOnSTRINGTerminalRuleCall_4_0 = (RuleCall)cOnAssignment_4.eContents().get(0);
		private final Keyword cUsingKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueNonSelectStatementParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cOnConditionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cConditionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cConditionExpressionParserRuleCall_10_0 = (RuleCall)cConditionAssignment_10.eContents().get(0);
		
		//Transform:
		//	'transform' 'as' name=STRING 'on' on=STRING 'using'
		//	'{'
		//	value+=NonSelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'transform' 'as' name=STRING 'on' on=STRING 'using' '{' value+=NonSelectStatement '}' 'on-condition'
		//condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'transform'
		public Keyword getTransformKeyword_0() { return cTransformKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'on'
		public Keyword getOnKeyword_3() { return cOnKeyword_3; }
		
		//on=STRING
		public Assignment getOnAssignment_4() { return cOnAssignment_4; }
		
		//STRING
		public RuleCall getOnSTRINGTerminalRuleCall_4_0() { return cOnSTRINGTerminalRuleCall_4_0; }
		
		//'using'
		public Keyword getUsingKeyword_5() { return cUsingKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//value+=NonSelectStatement
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//NonSelectStatement
		public RuleCall getValueNonSelectStatementParserRuleCall_7_0() { return cValueNonSelectStatementParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_9() { return cOnConditionKeyword_9; }
		
		//condition=Expression
		public Assignment getConditionAssignment_10() { return cConditionAssignment_10; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_10_0() { return cConditionExpressionParserRuleCall_10_0; }
	}
	public class DeleteSqlElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.DeleteSql");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeletesqlKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cOnKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOnAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOnSTRINGTerminalRuleCall_4_0 = (RuleCall)cOnAssignment_4.eContents().get(0);
		private final Keyword cUsingKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueNonSelectStatementParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cOnConditionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cConditionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cConditionExpressionParserRuleCall_10_0 = (RuleCall)cConditionAssignment_10.eContents().get(0);
		
		//DeleteSql:
		//	'deletesql' 'as' name=STRING 'on' on=STRING 'using'
		//	'{'
		//	value+=NonSelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'deletesql' 'as' name=STRING 'on' on=STRING 'using' '{' value+=NonSelectStatement '}' 'on-condition'
		//condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'deletesql'
		public Keyword getDeletesqlKeyword_0() { return cDeletesqlKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'on'
		public Keyword getOnKeyword_3() { return cOnKeyword_3; }
		
		//on=STRING
		public Assignment getOnAssignment_4() { return cOnAssignment_4; }
		
		//STRING
		public RuleCall getOnSTRINGTerminalRuleCall_4_0() { return cOnSTRINGTerminalRuleCall_4_0; }
		
		//'using'
		public Keyword getUsingKeyword_5() { return cUsingKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//value+=NonSelectStatement
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//NonSelectStatement
		public RuleCall getValueNonSelectStatementParserRuleCall_7_0() { return cValueNonSelectStatementParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_9() { return cOnConditionKeyword_9; }
		
		//condition=Expression
		public Assignment getConditionAssignment_10() { return cConditionAssignment_10; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_10_0() { return cConditionExpressionParserRuleCall_10_0; }
	}
	public class UpdateSqlElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.UpdateSql");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUpdatesqlKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cOnKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOnAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOnSTRINGTerminalRuleCall_4_0 = (RuleCall)cOnAssignment_4.eContents().get(0);
		private final Keyword cUsingKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueNonSelectStatementParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cOnConditionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cConditionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cConditionExpressionParserRuleCall_10_0 = (RuleCall)cConditionAssignment_10.eContents().get(0);
		
		//UpdateSql:
		//	'updatesql' 'as' name=STRING 'on' on=STRING 'using'
		//	'{'
		//	value+=NonSelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'updatesql' 'as' name=STRING 'on' on=STRING 'using' '{' value+=NonSelectStatement '}' 'on-condition'
		//condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'updatesql'
		public Keyword getUpdatesqlKeyword_0() { return cUpdatesqlKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'on'
		public Keyword getOnKeyword_3() { return cOnKeyword_3; }
		
		//on=STRING
		public Assignment getOnAssignment_4() { return cOnAssignment_4; }
		
		//STRING
		public RuleCall getOnSTRINGTerminalRuleCall_4_0() { return cOnSTRINGTerminalRuleCall_4_0; }
		
		//'using'
		public Keyword getUsingKeyword_5() { return cUsingKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//value+=NonSelectStatement
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//NonSelectStatement
		public RuleCall getValueNonSelectStatementParserRuleCall_7_0() { return cValueNonSelectStatementParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_9() { return cOnConditionKeyword_9; }
		
		//condition=Expression
		public Assignment getConditionAssignment_10() { return cConditionAssignment_10; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_10_0() { return cConditionExpressionParserRuleCall_10_0; }
	}
	public class InsertSqlElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.InsertSql");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInsertsqlKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cOnKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOnAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOnSTRINGTerminalRuleCall_4_0 = (RuleCall)cOnAssignment_4.eContents().get(0);
		private final Keyword cUsingKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueNonSelectStatementParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cOnConditionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cConditionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cConditionExpressionParserRuleCall_10_0 = (RuleCall)cConditionAssignment_10.eContents().get(0);
		
		//InsertSql:
		//	'insertsql' 'as' name=STRING 'on' on=STRING 'using'
		//	'{'
		//	value+=NonSelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'insertsql' 'as' name=STRING 'on' on=STRING 'using' '{' value+=NonSelectStatement '}' 'on-condition'
		//condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'insertsql'
		public Keyword getInsertsqlKeyword_0() { return cInsertsqlKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'on'
		public Keyword getOnKeyword_3() { return cOnKeyword_3; }
		
		//on=STRING
		public Assignment getOnAssignment_4() { return cOnAssignment_4; }
		
		//STRING
		public RuleCall getOnSTRINGTerminalRuleCall_4_0() { return cOnSTRINGTerminalRuleCall_4_0; }
		
		//'using'
		public Keyword getUsingKeyword_5() { return cUsingKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//value+=NonSelectStatement
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//NonSelectStatement
		public RuleCall getValueNonSelectStatementParserRuleCall_7_0() { return cValueNonSelectStatementParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_9() { return cOnConditionKeyword_9; }
		
		//condition=Expression
		public Assignment getConditionAssignment_10() { return cConditionAssignment_10; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_10_0() { return cConditionExpressionParserRuleCall_10_0; }
	}
	public class TruncateSqlElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.TruncateSql");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTruncatesqlKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cOnKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOnAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOnSTRINGTerminalRuleCall_4_0 = (RuleCall)cOnAssignment_4.eContents().get(0);
		private final Keyword cUsingKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueNonSelectStatementParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cOnConditionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cConditionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cConditionExpressionParserRuleCall_10_0 = (RuleCall)cConditionAssignment_10.eContents().get(0);
		
		//TruncateSql:
		//	'truncatesql' 'as' name=STRING 'on' on=STRING 'using'
		//	'{'
		//	value+=NonSelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'truncatesql' 'as' name=STRING 'on' on=STRING 'using' '{' value+=NonSelectStatement '}' 'on-condition'
		//condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'truncatesql'
		public Keyword getTruncatesqlKeyword_0() { return cTruncatesqlKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'on'
		public Keyword getOnKeyword_3() { return cOnKeyword_3; }
		
		//on=STRING
		public Assignment getOnAssignment_4() { return cOnAssignment_4; }
		
		//STRING
		public RuleCall getOnSTRINGTerminalRuleCall_4_0() { return cOnSTRINGTerminalRuleCall_4_0; }
		
		//'using'
		public Keyword getUsingKeyword_5() { return cUsingKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//value+=NonSelectStatement
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//NonSelectStatement
		public RuleCall getValueNonSelectStatementParserRuleCall_7_0() { return cValueNonSelectStatementParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_9() { return cOnConditionKeyword_9; }
		
		//condition=Expression
		public Assignment getConditionAssignment_10() { return cConditionAssignment_10; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_10_0() { return cConditionExpressionParserRuleCall_10_0; }
	}
	public class DropSqlElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.DropSql");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDropsqlKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cOnKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOnAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOnSTRINGTerminalRuleCall_4_0 = (RuleCall)cOnAssignment_4.eContents().get(0);
		private final Keyword cUsingKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueNonSelectStatementParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cOnConditionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cConditionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cConditionExpressionParserRuleCall_10_0 = (RuleCall)cConditionAssignment_10.eContents().get(0);
		
		//DropSql:
		//	'dropsql' 'as' name=STRING 'on' on=STRING 'using'
		//	'{'
		//	value+=NonSelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'dropsql' 'as' name=STRING 'on' on=STRING 'using' '{' value+=NonSelectStatement '}' 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'dropsql'
		public Keyword getDropsqlKeyword_0() { return cDropsqlKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'on'
		public Keyword getOnKeyword_3() { return cOnKeyword_3; }
		
		//on=STRING
		public Assignment getOnAssignment_4() { return cOnAssignment_4; }
		
		//STRING
		public RuleCall getOnSTRINGTerminalRuleCall_4_0() { return cOnSTRINGTerminalRuleCall_4_0; }
		
		//'using'
		public Keyword getUsingKeyword_5() { return cUsingKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//value+=NonSelectStatement
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//NonSelectStatement
		public RuleCall getValueNonSelectStatementParserRuleCall_7_0() { return cValueNonSelectStatementParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_9() { return cOnConditionKeyword_9; }
		
		//condition=Expression
		public Assignment getConditionAssignment_10() { return cConditionAssignment_10; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_10_0() { return cConditionExpressionParserRuleCall_10_0; }
	}
	public class ListFilesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.ListFiles");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListfilesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceSTRINGTerminalRuleCall_4_0 = (RuleCall)cSourceAssignment_4.eContents().get(0);
		private final Keyword cOnKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cToAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cToSTRINGTerminalRuleCall_6_0 = (RuleCall)cToAssignment_6.eContents().get(0);
		private final Keyword cTargetTableKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTargetTableAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTargetTableSTRINGTerminalRuleCall_8_0 = (RuleCall)cTargetTableAssignment_8.eContents().get(0);
		private final Keyword cUsingKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cValueAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cValueSelectStatementParserRuleCall_11_0 = (RuleCall)cValueAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cOnConditionKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cConditionAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cConditionExpressionParserRuleCall_14_0 = (RuleCall)cConditionAssignment_14.eContents().get(0);
		
		//ListFiles:
		//	'listfiles' 'as' name=STRING 'from' source=STRING 'on' to=STRING 'target-table' targetTable=STRING 'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'listfiles' 'as' name=STRING 'from' source=STRING 'on' to=STRING 'target-table' targetTable=STRING 'using' '{'
		//value=SelectStatement '}' 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'listfiles'
		public Keyword getListfilesKeyword_0() { return cListfilesKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//source=STRING
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_4_0() { return cSourceSTRINGTerminalRuleCall_4_0; }
		
		//'on'
		public Keyword getOnKeyword_5() { return cOnKeyword_5; }
		
		//to=STRING
		public Assignment getToAssignment_6() { return cToAssignment_6; }
		
		//STRING
		public RuleCall getToSTRINGTerminalRuleCall_6_0() { return cToSTRINGTerminalRuleCall_6_0; }
		
		//'target-table'
		public Keyword getTargetTableKeyword_7() { return cTargetTableKeyword_7; }
		
		//targetTable=STRING
		public Assignment getTargetTableAssignment_8() { return cTargetTableAssignment_8; }
		
		//STRING
		public RuleCall getTargetTableSTRINGTerminalRuleCall_8_0() { return cTargetTableSTRINGTerminalRuleCall_8_0; }
		
		//'using'
		public Keyword getUsingKeyword_9() { return cUsingKeyword_9; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_11() { return cValueAssignment_11; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_11_0() { return cValueSelectStatementParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_13() { return cOnConditionKeyword_13; }
		
		//condition=Expression
		public Assignment getConditionAssignment_14() { return cConditionAssignment_14; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_14_0() { return cConditionExpressionParserRuleCall_14_0; }
	}
	public class Mongo2DbElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Mongo2Db");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMongo2dbKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceConnStrAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceConnStrSTRINGTerminalRuleCall_4_0 = (RuleCall)cSourceConnStrAssignment_4.eContents().get(0);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cToAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cToSTRINGTerminalRuleCall_6_0 = (RuleCall)cToAssignment_6.eContents().get(0);
		private final Keyword cSrcDbKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSourceDbAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSourceDbSTRINGTerminalRuleCall_8_0 = (RuleCall)cSourceDbAssignment_8.eContents().get(0);
		private final Keyword cTargetDbKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cTargetDbAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cTargetDbSTRINGTerminalRuleCall_10_0 = (RuleCall)cTargetDbAssignment_10.eContents().get(0);
		private final Keyword cTargetTableKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cTargetTableAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cTargetTableSTRINGTerminalRuleCall_12_0 = (RuleCall)cTargetTableAssignment_12.eContents().get(0);
		private final Keyword cByFilterKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cFilterAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cFilterSTRINGTerminalRuleCall_14_0 = (RuleCall)cFilterAssignment_14.eContents().get(0);
		private final Keyword cByBatchKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cLimitAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cLimitSTRINGTerminalRuleCall_16_0 = (RuleCall)cLimitAssignment_16.eContents().get(0);
		private final Keyword cFindAttributeKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cFindAttrAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cFindAttrSTRINGTerminalRuleCall_18_0 = (RuleCall)cFindAttrAssignment_18.eContents().get(0);
		private final Keyword cApplyManipulationKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Assignment cApplyManipulationAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final RuleCall cApplyManipulationSTRINGTerminalRuleCall_20_0 = (RuleCall)cApplyManipulationAssignment_20.eContents().get(0);
		private final Keyword cOnUpdatekeyKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Assignment cOnUpdateKeyAssignment_22 = (Assignment)cGroup.eContents().get(22);
		private final RuleCall cOnUpdateKeySTRINGTerminalRuleCall_22_0 = (RuleCall)cOnUpdateKeyAssignment_22.eContents().get(0);
		private final Keyword cWithFetchBatchSizeKeyword_23 = (Keyword)cGroup.eContents().get(23);
		private final Assignment cFetchBatchSizeAssignment_24 = (Assignment)cGroup.eContents().get(24);
		private final RuleCall cFetchBatchSizeSTRINGTerminalRuleCall_24_0 = (RuleCall)cFetchBatchSizeAssignment_24.eContents().get(0);
		private final Keyword cWithWriteBatchSizeKeyword_25 = (Keyword)cGroup.eContents().get(25);
		private final Assignment cWriteBatchSizeAssignment_26 = (Assignment)cGroup.eContents().get(26);
		private final RuleCall cWriteBatchSizeSTRINGTerminalRuleCall_26_0 = (RuleCall)cWriteBatchSizeAssignment_26.eContents().get(0);
		private final Keyword cUsingKeyword_27 = (Keyword)cGroup.eContents().get(27);
		private final Keyword cLeftCurlyBracketKeyword_28 = (Keyword)cGroup.eContents().get(28);
		private final Assignment cValueAssignment_29 = (Assignment)cGroup.eContents().get(29);
		private final RuleCall cValueSelectStatementParserRuleCall_29_0 = (RuleCall)cValueAssignment_29.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_30 = (Keyword)cGroup.eContents().get(30);
		private final Keyword cOnConditionKeyword_31 = (Keyword)cGroup.eContents().get(31);
		private final Assignment cConditionAssignment_32 = (Assignment)cGroup.eContents().get(32);
		private final RuleCall cConditionExpressionParserRuleCall_32_0 = (RuleCall)cConditionAssignment_32.eContents().get(0);
		
		//Mongo2Db:
		//	'mongo2db' 'as' name=STRING 'from' sourceConnStr=STRING 'to' to=STRING 'srcDb' sourceDb=STRING 'targetDb'
		//	targetDb=STRING 'targetTable' targetTable=STRING
		//	'by-filter' filter=STRING 'by-batch' limit=STRING 'find-attribute' findAttr=STRING 'apply-manipulation'
		//	applyManipulation=STRING
		//	'on-updatekey' onUpdateKey=STRING 'with-fetch-batch-size' fetchBatchSize=STRING 'with-write-batch-size'
		//	writeBatchSize=STRING
		//	'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'mongo2db' 'as' name=STRING 'from' sourceConnStr=STRING 'to' to=STRING 'srcDb' sourceDb=STRING 'targetDb'
		//targetDb=STRING 'targetTable' targetTable=STRING 'by-filter' filter=STRING 'by-batch' limit=STRING 'find-attribute'
		//findAttr=STRING 'apply-manipulation' applyManipulation=STRING 'on-updatekey' onUpdateKey=STRING
		//'with-fetch-batch-size' fetchBatchSize=STRING 'with-write-batch-size' writeBatchSize=STRING 'using' '{'
		//value=SelectStatement '}' 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'mongo2db'
		public Keyword getMongo2dbKeyword_0() { return cMongo2dbKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//sourceConnStr=STRING
		public Assignment getSourceConnStrAssignment_4() { return cSourceConnStrAssignment_4; }
		
		//STRING
		public RuleCall getSourceConnStrSTRINGTerminalRuleCall_4_0() { return cSourceConnStrSTRINGTerminalRuleCall_4_0; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//to=STRING
		public Assignment getToAssignment_6() { return cToAssignment_6; }
		
		//STRING
		public RuleCall getToSTRINGTerminalRuleCall_6_0() { return cToSTRINGTerminalRuleCall_6_0; }
		
		//'srcDb'
		public Keyword getSrcDbKeyword_7() { return cSrcDbKeyword_7; }
		
		//sourceDb=STRING
		public Assignment getSourceDbAssignment_8() { return cSourceDbAssignment_8; }
		
		//STRING
		public RuleCall getSourceDbSTRINGTerminalRuleCall_8_0() { return cSourceDbSTRINGTerminalRuleCall_8_0; }
		
		//'targetDb'
		public Keyword getTargetDbKeyword_9() { return cTargetDbKeyword_9; }
		
		//targetDb=STRING
		public Assignment getTargetDbAssignment_10() { return cTargetDbAssignment_10; }
		
		//STRING
		public RuleCall getTargetDbSTRINGTerminalRuleCall_10_0() { return cTargetDbSTRINGTerminalRuleCall_10_0; }
		
		//'targetTable'
		public Keyword getTargetTableKeyword_11() { return cTargetTableKeyword_11; }
		
		//targetTable=STRING
		public Assignment getTargetTableAssignment_12() { return cTargetTableAssignment_12; }
		
		//STRING
		public RuleCall getTargetTableSTRINGTerminalRuleCall_12_0() { return cTargetTableSTRINGTerminalRuleCall_12_0; }
		
		//'by-filter'
		public Keyword getByFilterKeyword_13() { return cByFilterKeyword_13; }
		
		//filter=STRING
		public Assignment getFilterAssignment_14() { return cFilterAssignment_14; }
		
		//STRING
		public RuleCall getFilterSTRINGTerminalRuleCall_14_0() { return cFilterSTRINGTerminalRuleCall_14_0; }
		
		//'by-batch'
		public Keyword getByBatchKeyword_15() { return cByBatchKeyword_15; }
		
		//limit=STRING
		public Assignment getLimitAssignment_16() { return cLimitAssignment_16; }
		
		//STRING
		public RuleCall getLimitSTRINGTerminalRuleCall_16_0() { return cLimitSTRINGTerminalRuleCall_16_0; }
		
		//'find-attribute'
		public Keyword getFindAttributeKeyword_17() { return cFindAttributeKeyword_17; }
		
		//findAttr=STRING
		public Assignment getFindAttrAssignment_18() { return cFindAttrAssignment_18; }
		
		//STRING
		public RuleCall getFindAttrSTRINGTerminalRuleCall_18_0() { return cFindAttrSTRINGTerminalRuleCall_18_0; }
		
		//'apply-manipulation'
		public Keyword getApplyManipulationKeyword_19() { return cApplyManipulationKeyword_19; }
		
		//applyManipulation=STRING
		public Assignment getApplyManipulationAssignment_20() { return cApplyManipulationAssignment_20; }
		
		//STRING
		public RuleCall getApplyManipulationSTRINGTerminalRuleCall_20_0() { return cApplyManipulationSTRINGTerminalRuleCall_20_0; }
		
		//'on-updatekey'
		public Keyword getOnUpdatekeyKeyword_21() { return cOnUpdatekeyKeyword_21; }
		
		//onUpdateKey=STRING
		public Assignment getOnUpdateKeyAssignment_22() { return cOnUpdateKeyAssignment_22; }
		
		//STRING
		public RuleCall getOnUpdateKeySTRINGTerminalRuleCall_22_0() { return cOnUpdateKeySTRINGTerminalRuleCall_22_0; }
		
		//'with-fetch-batch-size'
		public Keyword getWithFetchBatchSizeKeyword_23() { return cWithFetchBatchSizeKeyword_23; }
		
		//fetchBatchSize=STRING
		public Assignment getFetchBatchSizeAssignment_24() { return cFetchBatchSizeAssignment_24; }
		
		//STRING
		public RuleCall getFetchBatchSizeSTRINGTerminalRuleCall_24_0() { return cFetchBatchSizeSTRINGTerminalRuleCall_24_0; }
		
		//'with-write-batch-size'
		public Keyword getWithWriteBatchSizeKeyword_25() { return cWithWriteBatchSizeKeyword_25; }
		
		//writeBatchSize=STRING
		public Assignment getWriteBatchSizeAssignment_26() { return cWriteBatchSizeAssignment_26; }
		
		//STRING
		public RuleCall getWriteBatchSizeSTRINGTerminalRuleCall_26_0() { return cWriteBatchSizeSTRINGTerminalRuleCall_26_0; }
		
		//'using'
		public Keyword getUsingKeyword_27() { return cUsingKeyword_27; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_28() { return cLeftCurlyBracketKeyword_28; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_29() { return cValueAssignment_29; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_29_0() { return cValueSelectStatementParserRuleCall_29_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_30() { return cRightCurlyBracketKeyword_30; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_31() { return cOnConditionKeyword_31; }
		
		//condition=Expression
		public Assignment getConditionAssignment_32() { return cConditionAssignment_32; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_32_0() { return cConditionExpressionParserRuleCall_32_0; }
	}
	public class FTPElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.FTP");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFtpKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cHostKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cHostAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cHostSTRINGTerminalRuleCall_4_0 = (RuleCall)cHostAssignment_4.eContents().get(0);
		private final Keyword cPortKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPortAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPortSTRINGTerminalRuleCall_6_0 = (RuleCall)cPortAssignment_6.eContents().get(0);
		private final Keyword cUsernameKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cUsernameAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cUsernameSTRINGTerminalRuleCall_8_0 = (RuleCall)cUsernameAssignment_8.eContents().get(0);
		private final Keyword cPasswordKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cPasswordAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cPasswordSTRINGTerminalRuleCall_10_0 = (RuleCall)cPasswordAssignment_10.eContents().get(0);
		private final Keyword cActionKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cActionAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cActionSTRINGTerminalRuleCall_12_0 = (RuleCall)cActionAssignment_12.eContents().get(0);
		private final Keyword cLocalDirKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cLocalDirAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cLocalDirSTRINGTerminalRuleCall_14_0 = (RuleCall)cLocalDirAssignment_14.eContents().get(0);
		private final Keyword cLocalFileKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cLocalFileAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cLocalFileSTRINGTerminalRuleCall_16_0 = (RuleCall)cLocalFileAssignment_16.eContents().get(0);
		private final Keyword cRemoteDirKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cRemoteDirAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cRemoteDirSTRINGTerminalRuleCall_18_0 = (RuleCall)cRemoteDirAssignment_18.eContents().get(0);
		private final Keyword cRemoteFileKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Assignment cRemoteFileAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final RuleCall cRemoteFileSTRINGTerminalRuleCall_20_0 = (RuleCall)cRemoteFileAssignment_20.eContents().get(0);
		private final Keyword cFromKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Assignment cSourceAssignment_22 = (Assignment)cGroup.eContents().get(22);
		private final RuleCall cSourceSTRINGTerminalRuleCall_22_0 = (RuleCall)cSourceAssignment_22.eContents().get(0);
		private final Keyword cTargetTableKeyword_23 = (Keyword)cGroup.eContents().get(23);
		private final Assignment cTargetTableAssignment_24 = (Assignment)cGroup.eContents().get(24);
		private final RuleCall cTargetTableSTRINGTerminalRuleCall_24_0 = (RuleCall)cTargetTableAssignment_24.eContents().get(0);
		private final Keyword cUsingKeyword_25 = (Keyword)cGroup.eContents().get(25);
		private final Keyword cLeftCurlyBracketKeyword_26 = (Keyword)cGroup.eContents().get(26);
		private final Assignment cValueAssignment_27 = (Assignment)cGroup.eContents().get(27);
		private final RuleCall cValueSTRINGTerminalRuleCall_27_0 = (RuleCall)cValueAssignment_27.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_28 = (Keyword)cGroup.eContents().get(28);
		private final Keyword cOnConditionKeyword_29 = (Keyword)cGroup.eContents().get(29);
		private final Assignment cConditionAssignment_30 = (Assignment)cGroup.eContents().get(30);
		private final RuleCall cConditionExpressionParserRuleCall_30_0 = (RuleCall)cConditionAssignment_30.eContents().get(0);
		
		//FTP:
		//	'ftp' 'as' name=STRING 'host' host=STRING 'port' port=STRING 'username' username=STRING 'password' password=STRING
		//	'action' action=STRING 'local-dir' localDir=STRING 'local-file' localFile=STRING 'remote-dir' remoteDir=STRING
		//	'remote-file'
		//	remoteFile=STRING 'from' source=STRING 'target-table' targetTable=STRING 'using'
		//	'{'
		//	value=STRING
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'ftp' 'as' name=STRING 'host' host=STRING 'port' port=STRING 'username' username=STRING 'password' password=STRING
		//'action' action=STRING 'local-dir' localDir=STRING 'local-file' localFile=STRING 'remote-dir' remoteDir=STRING
		//'remote-file' remoteFile=STRING 'from' source=STRING 'target-table' targetTable=STRING 'using' '{' value=STRING '}'
		//'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'ftp'
		public Keyword getFtpKeyword_0() { return cFtpKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'host'
		public Keyword getHostKeyword_3() { return cHostKeyword_3; }
		
		//host=STRING
		public Assignment getHostAssignment_4() { return cHostAssignment_4; }
		
		//STRING
		public RuleCall getHostSTRINGTerminalRuleCall_4_0() { return cHostSTRINGTerminalRuleCall_4_0; }
		
		//'port'
		public Keyword getPortKeyword_5() { return cPortKeyword_5; }
		
		//port=STRING
		public Assignment getPortAssignment_6() { return cPortAssignment_6; }
		
		//STRING
		public RuleCall getPortSTRINGTerminalRuleCall_6_0() { return cPortSTRINGTerminalRuleCall_6_0; }
		
		//'username'
		public Keyword getUsernameKeyword_7() { return cUsernameKeyword_7; }
		
		//username=STRING
		public Assignment getUsernameAssignment_8() { return cUsernameAssignment_8; }
		
		//STRING
		public RuleCall getUsernameSTRINGTerminalRuleCall_8_0() { return cUsernameSTRINGTerminalRuleCall_8_0; }
		
		//'password'
		public Keyword getPasswordKeyword_9() { return cPasswordKeyword_9; }
		
		//password=STRING
		public Assignment getPasswordAssignment_10() { return cPasswordAssignment_10; }
		
		//STRING
		public RuleCall getPasswordSTRINGTerminalRuleCall_10_0() { return cPasswordSTRINGTerminalRuleCall_10_0; }
		
		//'action'
		public Keyword getActionKeyword_11() { return cActionKeyword_11; }
		
		//action=STRING
		public Assignment getActionAssignment_12() { return cActionAssignment_12; }
		
		//STRING
		public RuleCall getActionSTRINGTerminalRuleCall_12_0() { return cActionSTRINGTerminalRuleCall_12_0; }
		
		//'local-dir'
		public Keyword getLocalDirKeyword_13() { return cLocalDirKeyword_13; }
		
		//localDir=STRING
		public Assignment getLocalDirAssignment_14() { return cLocalDirAssignment_14; }
		
		//STRING
		public RuleCall getLocalDirSTRINGTerminalRuleCall_14_0() { return cLocalDirSTRINGTerminalRuleCall_14_0; }
		
		//'local-file'
		public Keyword getLocalFileKeyword_15() { return cLocalFileKeyword_15; }
		
		//localFile=STRING
		public Assignment getLocalFileAssignment_16() { return cLocalFileAssignment_16; }
		
		//STRING
		public RuleCall getLocalFileSTRINGTerminalRuleCall_16_0() { return cLocalFileSTRINGTerminalRuleCall_16_0; }
		
		//'remote-dir'
		public Keyword getRemoteDirKeyword_17() { return cRemoteDirKeyword_17; }
		
		//remoteDir=STRING
		public Assignment getRemoteDirAssignment_18() { return cRemoteDirAssignment_18; }
		
		//STRING
		public RuleCall getRemoteDirSTRINGTerminalRuleCall_18_0() { return cRemoteDirSTRINGTerminalRuleCall_18_0; }
		
		//'remote-file'
		public Keyword getRemoteFileKeyword_19() { return cRemoteFileKeyword_19; }
		
		//remoteFile=STRING
		public Assignment getRemoteFileAssignment_20() { return cRemoteFileAssignment_20; }
		
		//STRING
		public RuleCall getRemoteFileSTRINGTerminalRuleCall_20_0() { return cRemoteFileSTRINGTerminalRuleCall_20_0; }
		
		//'from'
		public Keyword getFromKeyword_21() { return cFromKeyword_21; }
		
		//source=STRING
		public Assignment getSourceAssignment_22() { return cSourceAssignment_22; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_22_0() { return cSourceSTRINGTerminalRuleCall_22_0; }
		
		//'target-table'
		public Keyword getTargetTableKeyword_23() { return cTargetTableKeyword_23; }
		
		//targetTable=STRING
		public Assignment getTargetTableAssignment_24() { return cTargetTableAssignment_24; }
		
		//STRING
		public RuleCall getTargetTableSTRINGTerminalRuleCall_24_0() { return cTargetTableSTRINGTerminalRuleCall_24_0; }
		
		//'using'
		public Keyword getUsingKeyword_25() { return cUsingKeyword_25; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_26() { return cLeftCurlyBracketKeyword_26; }
		
		//value=STRING
		public Assignment getValueAssignment_27() { return cValueAssignment_27; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_27_0() { return cValueSTRINGTerminalRuleCall_27_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_28() { return cRightCurlyBracketKeyword_28; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_29() { return cOnConditionKeyword_29; }
		
		//condition=Expression
		public Assignment getConditionAssignment_30() { return cConditionAssignment_30; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_30_0() { return cConditionExpressionParserRuleCall_30_0; }
	}
	public class ZipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Zip");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cZipKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cZipFilePathKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cZipFilePathAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cZipFilePathSTRINGTerminalRuleCall_4_0 = (RuleCall)cZipFilePathAssignment_4.eContents().get(0);
		private final Keyword cZipFileNameKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cZipFileNameAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cZipFileNameSTRINGTerminalRuleCall_6_0 = (RuleCall)cZipFileNameAssignment_6.eContents().get(0);
		private final Keyword cSourceKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSourceAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSourceSTRINGTerminalRuleCall_8_0 = (RuleCall)cSourceAssignment_8.eContents().get(0);
		private final Keyword cBufferSizeKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cBufferSizeAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cBufferSizeSTRINGTerminalRuleCall_10_0 = (RuleCall)cBufferSizeAssignment_10.eContents().get(0);
		private final Keyword cUsingKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cValueAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cValueSelectStatementParserRuleCall_13_0 = (RuleCall)cValueAssignment_13.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cOnConditionKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cConditionAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cConditionExpressionParserRuleCall_16_0 = (RuleCall)cConditionAssignment_16.eContents().get(0);
		
		//Zip:
		//	'zip' 'as' name=STRING 'zip-file-path' zipFilePath=STRING 'zip-file-name' zipFileName=STRING 'source' source=STRING
		//	'buffer-size' bufferSize=STRING 'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'zip' 'as' name=STRING 'zip-file-path' zipFilePath=STRING 'zip-file-name' zipFileName=STRING 'source' source=STRING
		//'buffer-size' bufferSize=STRING 'using' '{' value=SelectStatement '}' 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'zip'
		public Keyword getZipKeyword_0() { return cZipKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'zip-file-path'
		public Keyword getZipFilePathKeyword_3() { return cZipFilePathKeyword_3; }
		
		//zipFilePath=STRING
		public Assignment getZipFilePathAssignment_4() { return cZipFilePathAssignment_4; }
		
		//STRING
		public RuleCall getZipFilePathSTRINGTerminalRuleCall_4_0() { return cZipFilePathSTRINGTerminalRuleCall_4_0; }
		
		//'zip-file-name'
		public Keyword getZipFileNameKeyword_5() { return cZipFileNameKeyword_5; }
		
		//zipFileName=STRING
		public Assignment getZipFileNameAssignment_6() { return cZipFileNameAssignment_6; }
		
		//STRING
		public RuleCall getZipFileNameSTRINGTerminalRuleCall_6_0() { return cZipFileNameSTRINGTerminalRuleCall_6_0; }
		
		//'source'
		public Keyword getSourceKeyword_7() { return cSourceKeyword_7; }
		
		//source=STRING
		public Assignment getSourceAssignment_8() { return cSourceAssignment_8; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_8_0() { return cSourceSTRINGTerminalRuleCall_8_0; }
		
		//'buffer-size'
		public Keyword getBufferSizeKeyword_9() { return cBufferSizeKeyword_9; }
		
		//bufferSize=STRING
		public Assignment getBufferSizeAssignment_10() { return cBufferSizeAssignment_10; }
		
		//STRING
		public RuleCall getBufferSizeSTRINGTerminalRuleCall_10_0() { return cBufferSizeSTRINGTerminalRuleCall_10_0; }
		
		//'using'
		public Keyword getUsingKeyword_11() { return cUsingKeyword_11; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12() { return cLeftCurlyBracketKeyword_12; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_13() { return cValueAssignment_13; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_13_0() { return cValueSelectStatementParserRuleCall_13_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_15() { return cOnConditionKeyword_15; }
		
		//condition=Expression
		public Assignment getConditionAssignment_16() { return cConditionAssignment_16; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_16_0() { return cConditionExpressionParserRuleCall_16_0; }
	}
	public class UnzipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Unzip");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUnzipKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSourceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceSTRINGTerminalRuleCall_4_0 = (RuleCall)cSourceAssignment_4.eContents().get(0);
		private final Keyword cDestDirKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDestDirAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDestDirSTRINGTerminalRuleCall_6_0 = (RuleCall)cDestDirAssignment_6.eContents().get(0);
		private final Keyword cBufferSizeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cBufferSizeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cBufferSizeSTRINGTerminalRuleCall_8_0 = (RuleCall)cBufferSizeAssignment_8.eContents().get(0);
		private final Keyword cUsingKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cValueAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cValueSelectStatementParserRuleCall_11_0 = (RuleCall)cValueAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cOnConditionKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cConditionAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cConditionExpressionParserRuleCall_14_0 = (RuleCall)cConditionAssignment_14.eContents().get(0);
		
		//Unzip:
		//	'unzip' 'as' name=STRING 'source' source=STRING 'dest-dir' destDir=STRING 'buffer-size' bufferSize=STRING 'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'unzip' 'as' name=STRING 'source' source=STRING 'dest-dir' destDir=STRING 'buffer-size' bufferSize=STRING 'using' '{'
		//value=SelectStatement '}' 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'unzip'
		public Keyword getUnzipKeyword_0() { return cUnzipKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'source'
		public Keyword getSourceKeyword_3() { return cSourceKeyword_3; }
		
		//source=STRING
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_4_0() { return cSourceSTRINGTerminalRuleCall_4_0; }
		
		//'dest-dir'
		public Keyword getDestDirKeyword_5() { return cDestDirKeyword_5; }
		
		//destDir=STRING
		public Assignment getDestDirAssignment_6() { return cDestDirAssignment_6; }
		
		//STRING
		public RuleCall getDestDirSTRINGTerminalRuleCall_6_0() { return cDestDirSTRINGTerminalRuleCall_6_0; }
		
		//'buffer-size'
		public Keyword getBufferSizeKeyword_7() { return cBufferSizeKeyword_7; }
		
		//bufferSize=STRING
		public Assignment getBufferSizeAssignment_8() { return cBufferSizeAssignment_8; }
		
		//STRING
		public RuleCall getBufferSizeSTRINGTerminalRuleCall_8_0() { return cBufferSizeSTRINGTerminalRuleCall_8_0; }
		
		//'using'
		public Keyword getUsingKeyword_9() { return cUsingKeyword_9; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_11() { return cValueAssignment_11; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_11_0() { return cValueSelectStatementParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_13() { return cOnConditionKeyword_13; }
		
		//condition=Expression
		public Assignment getConditionAssignment_14() { return cConditionAssignment_14; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_14_0() { return cConditionExpressionParserRuleCall_14_0; }
	}
	public class ChecksumElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Checksum");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChecksumKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cHostKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cHostAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cHostSTRINGTerminalRuleCall_4_0 = (RuleCall)cHostAssignment_4.eContents().get(0);
		private final Keyword cPortKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPortAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPortSTRINGTerminalRuleCall_6_0 = (RuleCall)cPortAssignment_6.eContents().get(0);
		private final Keyword cUsernameKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cUsernameAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cUsernameSTRINGTerminalRuleCall_8_0 = (RuleCall)cUsernameAssignment_8.eContents().get(0);
		private final Keyword cPasswordKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cPasswordAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cPasswordSTRINGTerminalRuleCall_10_0 = (RuleCall)cPasswordAssignment_10.eContents().get(0);
		private final Keyword cLocalDirKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cLocalDirAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cLocalDirSTRINGTerminalRuleCall_12_0 = (RuleCall)cLocalDirAssignment_12.eContents().get(0);
		private final Keyword cLocalFileKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cLocalFileAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cLocalFileSTRINGTerminalRuleCall_14_0 = (RuleCall)cLocalFileAssignment_14.eContents().get(0);
		private final Keyword cRemoteDirKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cRemoteDirAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cRemoteDirSTRINGTerminalRuleCall_16_0 = (RuleCall)cRemoteDirAssignment_16.eContents().get(0);
		private final Keyword cRemoteFileKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cRemoteFileAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cRemoteFileSTRINGTerminalRuleCall_18_0 = (RuleCall)cRemoteFileAssignment_18.eContents().get(0);
		private final Keyword cUsingKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Keyword cLeftCurlyBracketKeyword_20 = (Keyword)cGroup.eContents().get(20);
		private final Assignment cValueAssignment_21 = (Assignment)cGroup.eContents().get(21);
		private final RuleCall cValueSelectStatementParserRuleCall_21_0 = (RuleCall)cValueAssignment_21.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_22 = (Keyword)cGroup.eContents().get(22);
		private final Keyword cOnConditionKeyword_23 = (Keyword)cGroup.eContents().get(23);
		private final Assignment cConditionAssignment_24 = (Assignment)cGroup.eContents().get(24);
		private final RuleCall cConditionExpressionParserRuleCall_24_0 = (RuleCall)cConditionAssignment_24.eContents().get(0);
		
		//Checksum:
		//	'checksum' 'as' name=STRING 'host' host=STRING 'port' port=STRING 'username' username=STRING 'password'
		//	password=STRING
		//	'local-dir' localDir=STRING 'local-file' localFile=STRING 'remote-dir' remoteDir=STRING 'remote-file'
		//	remoteFile=STRING 'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'checksum' 'as' name=STRING 'host' host=STRING 'port' port=STRING 'username' username=STRING 'password' password=STRING
		//'local-dir' localDir=STRING 'local-file' localFile=STRING 'remote-dir' remoteDir=STRING 'remote-file'
		//remoteFile=STRING 'using' '{' value=SelectStatement '}' 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'checksum'
		public Keyword getChecksumKeyword_0() { return cChecksumKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'host'
		public Keyword getHostKeyword_3() { return cHostKeyword_3; }
		
		//host=STRING
		public Assignment getHostAssignment_4() { return cHostAssignment_4; }
		
		//STRING
		public RuleCall getHostSTRINGTerminalRuleCall_4_0() { return cHostSTRINGTerminalRuleCall_4_0; }
		
		//'port'
		public Keyword getPortKeyword_5() { return cPortKeyword_5; }
		
		//port=STRING
		public Assignment getPortAssignment_6() { return cPortAssignment_6; }
		
		//STRING
		public RuleCall getPortSTRINGTerminalRuleCall_6_0() { return cPortSTRINGTerminalRuleCall_6_0; }
		
		//'username'
		public Keyword getUsernameKeyword_7() { return cUsernameKeyword_7; }
		
		//username=STRING
		public Assignment getUsernameAssignment_8() { return cUsernameAssignment_8; }
		
		//STRING
		public RuleCall getUsernameSTRINGTerminalRuleCall_8_0() { return cUsernameSTRINGTerminalRuleCall_8_0; }
		
		//'password'
		public Keyword getPasswordKeyword_9() { return cPasswordKeyword_9; }
		
		//password=STRING
		public Assignment getPasswordAssignment_10() { return cPasswordAssignment_10; }
		
		//STRING
		public RuleCall getPasswordSTRINGTerminalRuleCall_10_0() { return cPasswordSTRINGTerminalRuleCall_10_0; }
		
		//'local-dir'
		public Keyword getLocalDirKeyword_11() { return cLocalDirKeyword_11; }
		
		//localDir=STRING
		public Assignment getLocalDirAssignment_12() { return cLocalDirAssignment_12; }
		
		//STRING
		public RuleCall getLocalDirSTRINGTerminalRuleCall_12_0() { return cLocalDirSTRINGTerminalRuleCall_12_0; }
		
		//'local-file'
		public Keyword getLocalFileKeyword_13() { return cLocalFileKeyword_13; }
		
		//localFile=STRING
		public Assignment getLocalFileAssignment_14() { return cLocalFileAssignment_14; }
		
		//STRING
		public RuleCall getLocalFileSTRINGTerminalRuleCall_14_0() { return cLocalFileSTRINGTerminalRuleCall_14_0; }
		
		//'remote-dir'
		public Keyword getRemoteDirKeyword_15() { return cRemoteDirKeyword_15; }
		
		//remoteDir=STRING
		public Assignment getRemoteDirAssignment_16() { return cRemoteDirAssignment_16; }
		
		//STRING
		public RuleCall getRemoteDirSTRINGTerminalRuleCall_16_0() { return cRemoteDirSTRINGTerminalRuleCall_16_0; }
		
		//'remote-file'
		public Keyword getRemoteFileKeyword_17() { return cRemoteFileKeyword_17; }
		
		//remoteFile=STRING
		public Assignment getRemoteFileAssignment_18() { return cRemoteFileAssignment_18; }
		
		//STRING
		public RuleCall getRemoteFileSTRINGTerminalRuleCall_18_0() { return cRemoteFileSTRINGTerminalRuleCall_18_0; }
		
		//'using'
		public Keyword getUsingKeyword_19() { return cUsingKeyword_19; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_20() { return cLeftCurlyBracketKeyword_20; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_21() { return cValueAssignment_21; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_21_0() { return cValueSelectStatementParserRuleCall_21_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_22() { return cRightCurlyBracketKeyword_22; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_23() { return cOnConditionKeyword_23; }
		
		//condition=Expression
		public Assignment getConditionAssignment_24() { return cConditionAssignment_24; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_24_0() { return cConditionExpressionParserRuleCall_24_0; }
	}
	public class JsonTransformElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.JsonTransform");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJsontransformKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceSTRINGTerminalRuleCall_4_0 = (RuleCall)cSourceAssignment_4.eContents().get(0);
		private final Keyword cTargetTableKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTargetTableAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTargetTableSTRINGTerminalRuleCall_6_0 = (RuleCall)cTargetTableAssignment_6.eContents().get(0);
		private final Keyword cUsingKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cValueAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cValueSelectStatementParserRuleCall_9_0 = (RuleCall)cValueAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cOnConditionKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cConditionAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cConditionExpressionParserRuleCall_12_0 = (RuleCall)cConditionAssignment_12.eContents().get(0);
		
		//JsonTransform:
		//	'jsontransform' 'as' name=STRING 'from' source=STRING 'target-table' targetTable=STRING 'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'jsontransform' 'as' name=STRING 'from' source=STRING 'target-table' targetTable=STRING 'using' '{'
		//value=SelectStatement '}' 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'jsontransform'
		public Keyword getJsontransformKeyword_0() { return cJsontransformKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//source=STRING
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_4_0() { return cSourceSTRINGTerminalRuleCall_4_0; }
		
		//'target-table'
		public Keyword getTargetTableKeyword_5() { return cTargetTableKeyword_5; }
		
		//targetTable=STRING
		public Assignment getTargetTableAssignment_6() { return cTargetTableAssignment_6; }
		
		//STRING
		public RuleCall getTargetTableSTRINGTerminalRuleCall_6_0() { return cTargetTableSTRINGTerminalRuleCall_6_0; }
		
		//'using'
		public Keyword getUsingKeyword_7() { return cUsingKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_9() { return cValueAssignment_9; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_9_0() { return cValueSelectStatementParserRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_11() { return cOnConditionKeyword_11; }
		
		//condition=Expression
		public Assignment getConditionAssignment_12() { return cConditionAssignment_12; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_12_0() { return cConditionExpressionParserRuleCall_12_0; }
	}
	public class JsonDeserializeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.JsonDeserialize");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJsondeserializeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceSTRINGTerminalRuleCall_4_0 = (RuleCall)cSourceAssignment_4.eContents().get(0);
		private final Keyword cTargetTableKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTargetTableAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTargetTableSTRINGTerminalRuleCall_6_0 = (RuleCall)cTargetTableAssignment_6.eContents().get(0);
		private final Keyword cInputKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cInputAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cInputSTRINGTerminalRuleCall_8_0 = (RuleCall)cInputAssignment_8.eContents().get(0);
		private final Keyword cUsingKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cValueAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cValueSelectStatementParserRuleCall_11_0 = (RuleCall)cValueAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cOnConditionKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cConditionAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cConditionExpressionParserRuleCall_14_0 = (RuleCall)cConditionAssignment_14.eContents().get(0);
		
		//JsonDeserialize:
		//	'jsondeserialize' 'as' name=STRING 'from' source=STRING 'target-table' targetTable=STRING 'input' input=STRING
		//	'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'jsondeserialize' 'as' name=STRING 'from' source=STRING 'target-table' targetTable=STRING 'input' input=STRING 'using'
		//'{' value=SelectStatement '}' 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'jsondeserialize'
		public Keyword getJsondeserializeKeyword_0() { return cJsondeserializeKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//source=STRING
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_4_0() { return cSourceSTRINGTerminalRuleCall_4_0; }
		
		//'target-table'
		public Keyword getTargetTableKeyword_5() { return cTargetTableKeyword_5; }
		
		//targetTable=STRING
		public Assignment getTargetTableAssignment_6() { return cTargetTableAssignment_6; }
		
		//STRING
		public RuleCall getTargetTableSTRINGTerminalRuleCall_6_0() { return cTargetTableSTRINGTerminalRuleCall_6_0; }
		
		//'input'
		public Keyword getInputKeyword_7() { return cInputKeyword_7; }
		
		//input=STRING
		public Assignment getInputAssignment_8() { return cInputAssignment_8; }
		
		//STRING
		public RuleCall getInputSTRINGTerminalRuleCall_8_0() { return cInputSTRINGTerminalRuleCall_8_0; }
		
		//'using'
		public Keyword getUsingKeyword_9() { return cUsingKeyword_9; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_11() { return cValueAssignment_11; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_11_0() { return cValueSelectStatementParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_13() { return cOnConditionKeyword_13; }
		
		//condition=Expression
		public Assignment getConditionAssignment_14() { return cConditionAssignment_14; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_14_0() { return cConditionExpressionParserRuleCall_14_0; }
	}
	public class RestApiElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.RestApi");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRestapiKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cUrlKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cUrlAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cUrlSTRINGTerminalRuleCall_4_0 = (RuleCall)cUrlAssignment_4.eContents().get(0);
		private final Keyword cMethodKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMethodAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMethodSTRINGTerminalRuleCall_6_0 = (RuleCall)cMethodAssignment_6.eContents().get(0);
		private final Keyword cPropertyKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cPropertyAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cPropertySTRINGTerminalRuleCall_8_0 = (RuleCall)cPropertyAssignment_8.eContents().get(0);
		private final Keyword cPayloadKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cPayloadAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cPayloadSTRINGTerminalRuleCall_10_0 = (RuleCall)cPayloadAssignment_10.eContents().get(0);
		private final Keyword cFromKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cSourceAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cSourceSTRINGTerminalRuleCall_12_0 = (RuleCall)cSourceAssignment_12.eContents().get(0);
		private final Keyword cTargetTableKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cTargetTableAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cTargetTableSTRINGTerminalRuleCall_14_0 = (RuleCall)cTargetTableAssignment_14.eContents().get(0);
		private final Keyword cUsingKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cLeftCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cValueAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cValueSelectStatementParserRuleCall_17_0 = (RuleCall)cValueAssignment_17.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Keyword cOnConditionKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Assignment cConditionAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final RuleCall cConditionExpressionParserRuleCall_20_0 = (RuleCall)cConditionAssignment_20.eContents().get(0);
		
		//RestApi:
		//	'restapi' 'as' name=STRING 'url' url=STRING 'method' method=STRING 'property' property=STRING 'payload'
		//	payload=STRING
		//	'from' source=STRING 'target-table' targetTable=STRING 'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'restapi' 'as' name=STRING 'url' url=STRING 'method' method=STRING 'property' property=STRING 'payload' payload=STRING
		//'from' source=STRING 'target-table' targetTable=STRING 'using' '{' value=SelectStatement '}' 'on-condition'
		//condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'restapi'
		public Keyword getRestapiKeyword_0() { return cRestapiKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'url'
		public Keyword getUrlKeyword_3() { return cUrlKeyword_3; }
		
		//url=STRING
		public Assignment getUrlAssignment_4() { return cUrlAssignment_4; }
		
		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_4_0() { return cUrlSTRINGTerminalRuleCall_4_0; }
		
		//'method'
		public Keyword getMethodKeyword_5() { return cMethodKeyword_5; }
		
		//method=STRING
		public Assignment getMethodAssignment_6() { return cMethodAssignment_6; }
		
		//STRING
		public RuleCall getMethodSTRINGTerminalRuleCall_6_0() { return cMethodSTRINGTerminalRuleCall_6_0; }
		
		//'property'
		public Keyword getPropertyKeyword_7() { return cPropertyKeyword_7; }
		
		//property=STRING
		public Assignment getPropertyAssignment_8() { return cPropertyAssignment_8; }
		
		//STRING
		public RuleCall getPropertySTRINGTerminalRuleCall_8_0() { return cPropertySTRINGTerminalRuleCall_8_0; }
		
		//'payload'
		public Keyword getPayloadKeyword_9() { return cPayloadKeyword_9; }
		
		//payload=STRING
		public Assignment getPayloadAssignment_10() { return cPayloadAssignment_10; }
		
		//STRING
		public RuleCall getPayloadSTRINGTerminalRuleCall_10_0() { return cPayloadSTRINGTerminalRuleCall_10_0; }
		
		//'from'
		public Keyword getFromKeyword_11() { return cFromKeyword_11; }
		
		//source=STRING
		public Assignment getSourceAssignment_12() { return cSourceAssignment_12; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_12_0() { return cSourceSTRINGTerminalRuleCall_12_0; }
		
		//'target-table'
		public Keyword getTargetTableKeyword_13() { return cTargetTableKeyword_13; }
		
		//targetTable=STRING
		public Assignment getTargetTableAssignment_14() { return cTargetTableAssignment_14; }
		
		//STRING
		public RuleCall getTargetTableSTRINGTerminalRuleCall_14_0() { return cTargetTableSTRINGTerminalRuleCall_14_0; }
		
		//'using'
		public Keyword getUsingKeyword_15() { return cUsingKeyword_15; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_16() { return cLeftCurlyBracketKeyword_16; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_17() { return cValueAssignment_17; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_17_0() { return cValueSelectStatementParserRuleCall_17_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_18() { return cRightCurlyBracketKeyword_18; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_19() { return cOnConditionKeyword_19; }
		
		//condition=Expression
		public Assignment getConditionAssignment_20() { return cConditionAssignment_20; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_20_0() { return cConditionExpressionParserRuleCall_20_0; }
	}
	public class PythonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Python");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPythonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceSTRINGTerminalRuleCall_4_0 = (RuleCall)cSourceAssignment_4.eContents().get(0);
		private final Keyword cTargetKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTargetAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTargetSTRINGTerminalRuleCall_6_0 = (RuleCall)cTargetAssignment_6.eContents().get(0);
		private final Keyword cUsingKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cValueAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cValueSelectStatementParserRuleCall_9_0 = (RuleCall)cValueAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cOnConditionKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cConditionAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cConditionExpressionParserRuleCall_12_0 = (RuleCall)cConditionAssignment_12.eContents().get(0);
		
		//Python:
		//	'python' 'as' name=STRING 'from' source=STRING 'target' target=STRING 'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'python' 'as' name=STRING 'from' source=STRING 'target' target=STRING 'using' '{' value=SelectStatement '}'
		//'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'python'
		public Keyword getPythonKeyword_0() { return cPythonKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//source=STRING
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_4_0() { return cSourceSTRINGTerminalRuleCall_4_0; }
		
		//'target'
		public Keyword getTargetKeyword_5() { return cTargetKeyword_5; }
		
		//target=STRING
		public Assignment getTargetAssignment_6() { return cTargetAssignment_6; }
		
		//STRING
		public RuleCall getTargetSTRINGTerminalRuleCall_6_0() { return cTargetSTRINGTerminalRuleCall_6_0; }
		
		//'using'
		public Keyword getUsingKeyword_7() { return cUsingKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_9() { return cValueAssignment_9; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_9_0() { return cValueSelectStatementParserRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_11() { return cOnConditionKeyword_11; }
		
		//condition=Expression
		public Assignment getConditionAssignment_12() { return cConditionAssignment_12; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_12_0() { return cConditionExpressionParserRuleCall_12_0; }
	}
	public class RestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Rest");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRestKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSecuredByKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAuthtokenAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAuthtokenSTRINGTerminalRuleCall_4_0 = (RuleCall)cAuthtokenAssignment_4.eContents().get(0);
		private final Keyword cWithUrlKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cUrlAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cUrlSTRINGTerminalRuleCall_6_0 = (RuleCall)cUrlAssignment_6.eContents().get(0);
		private final Keyword cAndMethodAsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cMethodAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cMethodSTRINGTerminalRuleCall_8_0 = (RuleCall)cMethodAssignment_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cFromKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cResourcedatafromAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cResourcedatafromSTRINGTerminalRuleCall_11_0 = (RuleCall)cResourcedatafromAssignment_11.eContents().get(0);
		private final Keyword cUpdateUrlWithKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cLeftCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cUrldataAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cUrldataSelectStatementParserRuleCall_14_0 = (RuleCall)cUrldataAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cFromKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cHeaderdatafromAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cHeaderdatafromSTRINGTerminalRuleCall_17_0 = (RuleCall)cHeaderdatafromAssignment_17.eContents().get(0);
		private final Keyword cUpdateHeaderWithKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Keyword cLeftCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Assignment cHeaderdataAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final RuleCall cHeaderdataSelectStatementParserRuleCall_20_0 = (RuleCall)cHeaderdataAssignment_20.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Keyword cFromKeyword_22 = (Keyword)cGroup.eContents().get(22);
		private final Assignment cPostdatafromAssignment_23 = (Assignment)cGroup.eContents().get(23);
		private final RuleCall cPostdatafromSTRINGTerminalRuleCall_23_0 = (RuleCall)cPostdatafromAssignment_23.eContents().get(0);
		private final Keyword cUpdateBodyWithKeyword_24 = (Keyword)cGroup.eContents().get(24);
		private final Keyword cLeftCurlyBracketKeyword_25 = (Keyword)cGroup.eContents().get(25);
		private final Keyword cParentKeyword_26 = (Keyword)cGroup.eContents().get(26);
		private final Keyword cAsKeyword_27 = (Keyword)cGroup.eContents().get(27);
		private final Assignment cParentNameAssignment_28 = (Assignment)cGroup.eContents().get(28);
		private final RuleCall cParentNameSTRINGTerminalRuleCall_28_0 = (RuleCall)cParentNameAssignment_28.eContents().get(0);
		private final Assignment cParentdataAssignment_29 = (Assignment)cGroup.eContents().get(29);
		private final RuleCall cParentdataSelectStatementParserRuleCall_29_0 = (RuleCall)cParentdataAssignment_29.eContents().get(0);
		private final Assignment cPartsAssignment_30 = (Assignment)cGroup.eContents().get(30);
		private final RuleCall cPartsRestPartParserRuleCall_30_0 = (RuleCall)cPartsAssignment_30.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_31 = (Keyword)cGroup.eContents().get(31);
		private final Keyword cIntoKeyword_32 = (Keyword)cGroup.eContents().get(32);
		private final Assignment cAckdatatoAssignment_33 = (Assignment)cGroup.eContents().get(33);
		private final RuleCall cAckdatatoSTRINGTerminalRuleCall_33_0 = (RuleCall)cAckdatatoAssignment_33.eContents().get(0);
		private final Keyword cStoreAckAtKeyword_34 = (Keyword)cGroup.eContents().get(34);
		private final Keyword cLeftCurlyBracketKeyword_35 = (Keyword)cGroup.eContents().get(35);
		private final Assignment cAckdataAssignment_36 = (Assignment)cGroup.eContents().get(36);
		private final RuleCall cAckdataSelectStatementParserRuleCall_36_0 = (RuleCall)cAckdataAssignment_36.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_37 = (Keyword)cGroup.eContents().get(37);
		private final Keyword cRightCurlyBracketKeyword_38 = (Keyword)cGroup.eContents().get(38);
		private final Keyword cOnConditionKeyword_39 = (Keyword)cGroup.eContents().get(39);
		private final Assignment cConditionAssignment_40 = (Assignment)cGroup.eContents().get(40);
		private final RuleCall cConditionExpressionParserRuleCall_40_0 = (RuleCall)cConditionAssignment_40.eContents().get(0);
		
		//Rest:
		//	'rest' 'as' name=STRING 'secured-by' authtoken=STRING 'with-url' url=STRING 'and-method-as' method=STRING
		//	'{'
		//	'from' resourcedatafrom=STRING 'update-url-with' '{'
		//	urldata=SelectStatement
		//	'}'
		//	'from' headerdatafrom=STRING 'update-header-with' '{'
		//	headerdata=SelectStatement
		//	'}'
		//	'from' postdatafrom=STRING 'update-body-with' '{'
		//	'parent' 'as' parentName=STRING parentdata=SelectStatement
		//	parts+=RestPart*
		//	'}'
		//	'into' ackdatato=STRING 'store-ack-at' '{'
		//	ackdata=SelectStatement
		//	'}'
		//	'}' 'on-condition' condition=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'rest' 'as' name=STRING 'secured-by' authtoken=STRING 'with-url' url=STRING 'and-method-as' method=STRING '{' 'from'
		//resourcedatafrom=STRING 'update-url-with' '{' urldata=SelectStatement '}' 'from' headerdatafrom=STRING
		//'update-header-with' '{' headerdata=SelectStatement '}' 'from' postdatafrom=STRING 'update-body-with' '{' 'parent'
		//'as' parentName=STRING parentdata=SelectStatement parts+=RestPart* '}' 'into' ackdatato=STRING 'store-ack-at' '{'
		//ackdata=SelectStatement '}' '}' 'on-condition' condition=Expression
		public Group getGroup() { return cGroup; }
		
		//'rest'
		public Keyword getRestKeyword_0() { return cRestKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'secured-by'
		public Keyword getSecuredByKeyword_3() { return cSecuredByKeyword_3; }
		
		//authtoken=STRING
		public Assignment getAuthtokenAssignment_4() { return cAuthtokenAssignment_4; }
		
		//STRING
		public RuleCall getAuthtokenSTRINGTerminalRuleCall_4_0() { return cAuthtokenSTRINGTerminalRuleCall_4_0; }
		
		//'with-url'
		public Keyword getWithUrlKeyword_5() { return cWithUrlKeyword_5; }
		
		//url=STRING
		public Assignment getUrlAssignment_6() { return cUrlAssignment_6; }
		
		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_6_0() { return cUrlSTRINGTerminalRuleCall_6_0; }
		
		//'and-method-as'
		public Keyword getAndMethodAsKeyword_7() { return cAndMethodAsKeyword_7; }
		
		//method=STRING
		public Assignment getMethodAssignment_8() { return cMethodAssignment_8; }
		
		//STRING
		public RuleCall getMethodSTRINGTerminalRuleCall_8_0() { return cMethodSTRINGTerminalRuleCall_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }
		
		//'from'
		public Keyword getFromKeyword_10() { return cFromKeyword_10; }
		
		//resourcedatafrom=STRING
		public Assignment getResourcedatafromAssignment_11() { return cResourcedatafromAssignment_11; }
		
		//STRING
		public RuleCall getResourcedatafromSTRINGTerminalRuleCall_11_0() { return cResourcedatafromSTRINGTerminalRuleCall_11_0; }
		
		//'update-url-with'
		public Keyword getUpdateUrlWithKeyword_12() { return cUpdateUrlWithKeyword_12; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13() { return cLeftCurlyBracketKeyword_13; }
		
		//urldata=SelectStatement
		public Assignment getUrldataAssignment_14() { return cUrldataAssignment_14; }
		
		//SelectStatement
		public RuleCall getUrldataSelectStatementParserRuleCall_14_0() { return cUrldataSelectStatementParserRuleCall_14_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
		
		//'from'
		public Keyword getFromKeyword_16() { return cFromKeyword_16; }
		
		//headerdatafrom=STRING
		public Assignment getHeaderdatafromAssignment_17() { return cHeaderdatafromAssignment_17; }
		
		//STRING
		public RuleCall getHeaderdatafromSTRINGTerminalRuleCall_17_0() { return cHeaderdatafromSTRINGTerminalRuleCall_17_0; }
		
		//'update-header-with'
		public Keyword getUpdateHeaderWithKeyword_18() { return cUpdateHeaderWithKeyword_18; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_19() { return cLeftCurlyBracketKeyword_19; }
		
		//headerdata=SelectStatement
		public Assignment getHeaderdataAssignment_20() { return cHeaderdataAssignment_20; }
		
		//SelectStatement
		public RuleCall getHeaderdataSelectStatementParserRuleCall_20_0() { return cHeaderdataSelectStatementParserRuleCall_20_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_21() { return cRightCurlyBracketKeyword_21; }
		
		//'from'
		public Keyword getFromKeyword_22() { return cFromKeyword_22; }
		
		//postdatafrom=STRING
		public Assignment getPostdatafromAssignment_23() { return cPostdatafromAssignment_23; }
		
		//STRING
		public RuleCall getPostdatafromSTRINGTerminalRuleCall_23_0() { return cPostdatafromSTRINGTerminalRuleCall_23_0; }
		
		//'update-body-with'
		public Keyword getUpdateBodyWithKeyword_24() { return cUpdateBodyWithKeyword_24; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_25() { return cLeftCurlyBracketKeyword_25; }
		
		//'parent'
		public Keyword getParentKeyword_26() { return cParentKeyword_26; }
		
		//'as'
		public Keyword getAsKeyword_27() { return cAsKeyword_27; }
		
		//parentName=STRING
		public Assignment getParentNameAssignment_28() { return cParentNameAssignment_28; }
		
		//STRING
		public RuleCall getParentNameSTRINGTerminalRuleCall_28_0() { return cParentNameSTRINGTerminalRuleCall_28_0; }
		
		//parentdata=SelectStatement
		public Assignment getParentdataAssignment_29() { return cParentdataAssignment_29; }
		
		//SelectStatement
		public RuleCall getParentdataSelectStatementParserRuleCall_29_0() { return cParentdataSelectStatementParserRuleCall_29_0; }
		
		//parts+=RestPart*
		public Assignment getPartsAssignment_30() { return cPartsAssignment_30; }
		
		//RestPart
		public RuleCall getPartsRestPartParserRuleCall_30_0() { return cPartsRestPartParserRuleCall_30_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_31() { return cRightCurlyBracketKeyword_31; }
		
		//'into'
		public Keyword getIntoKeyword_32() { return cIntoKeyword_32; }
		
		//ackdatato=STRING
		public Assignment getAckdatatoAssignment_33() { return cAckdatatoAssignment_33; }
		
		//STRING
		public RuleCall getAckdatatoSTRINGTerminalRuleCall_33_0() { return cAckdatatoSTRINGTerminalRuleCall_33_0; }
		
		//'store-ack-at'
		public Keyword getStoreAckAtKeyword_34() { return cStoreAckAtKeyword_34; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_35() { return cLeftCurlyBracketKeyword_35; }
		
		//ackdata=SelectStatement
		public Assignment getAckdataAssignment_36() { return cAckdataAssignment_36; }
		
		//SelectStatement
		public RuleCall getAckdataSelectStatementParserRuleCall_36_0() { return cAckdataSelectStatementParserRuleCall_36_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_37() { return cRightCurlyBracketKeyword_37; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_38() { return cRightCurlyBracketKeyword_38; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_39() { return cOnConditionKeyword_39; }
		
		//condition=Expression
		public Assignment getConditionAssignment_40() { return cConditionAssignment_40; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_40_0() { return cConditionExpressionParserRuleCall_40_0; }
	}
	public class RestPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.RestPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPartKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPartNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPartNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cPartNameAssignment_2.eContents().get(0);
		private final Keyword cWithKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPartDataAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPartDataSelectStatementParserRuleCall_4_0 = (RuleCall)cPartDataAssignment_4.eContents().get(0);
		
		//RestPart:
		//	'part' 'as' partName=STRING 'with' partData=SelectStatement;
		@Override public ParserRule getRule() { return rule; }
		
		//'part' 'as' partName=STRING 'with' partData=SelectStatement
		public Group getGroup() { return cGroup; }
		
		//'part'
		public Keyword getPartKeyword_0() { return cPartKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//partName=STRING
		public Assignment getPartNameAssignment_2() { return cPartNameAssignment_2; }
		
		//STRING
		public RuleCall getPartNameSTRINGTerminalRuleCall_2_0() { return cPartNameSTRINGTerminalRuleCall_2_0; }
		
		//'with'
		public Keyword getWithKeyword_3() { return cWithKeyword_3; }
		
		//partData=SelectStatement
		public Assignment getPartDataAssignment_4() { return cPartDataAssignment_4; }
		
		//SelectStatement
		public RuleCall getPartDataSelectStatementParserRuleCall_4_0() { return cPartDataSelectStatementParserRuleCall_4_0; }
	}
	public class ColumnElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Column");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Column:
		//	STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	public class SelectStatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.SelectStatement");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//SelectStatement:
		//	STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	public class NonSelectStatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.NonSelectStatement");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//NonSelectStatement:
		//	STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	public class CreateStatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.CreateStatement");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//CreateStatement:
		//	STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Expression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIfKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLhsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLhsSTRINGTerminalRuleCall_1_0 = (RuleCall)cLhsAssignment_1.eContents().get(0);
		private final Assignment cOperatorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOperatorOperatorParserRuleCall_2_0 = (RuleCall)cOperatorAssignment_2.eContents().get(0);
		private final Assignment cRhsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRhsSTRINGTerminalRuleCall_3_0 = (RuleCall)cRhsAssignment_3.eContents().get(0);
		
		//Expression:
		//	'if' lhs=STRING operator=Operator rhs=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'if' lhs=STRING operator=Operator rhs=STRING
		public Group getGroup() { return cGroup; }
		
		//'if'
		public Keyword getIfKeyword_0() { return cIfKeyword_0; }
		
		//lhs=STRING
		public Assignment getLhsAssignment_1() { return cLhsAssignment_1; }
		
		//STRING
		public RuleCall getLhsSTRINGTerminalRuleCall_1_0() { return cLhsSTRINGTerminalRuleCall_1_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_2() { return cOperatorAssignment_2; }
		
		//Operator
		public RuleCall getOperatorOperatorParserRuleCall_2_0() { return cOperatorOperatorParserRuleCall_2_0; }
		
		//rhs=STRING
		public Assignment getRhsAssignment_3() { return cRhsAssignment_3; }
		
		//STRING
		public RuleCall getRhsSTRINGTerminalRuleCall_3_0() { return cRhsSTRINGTerminalRuleCall_3_0; }
	}
	public class OperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "in.handyman.Dsl.Operator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cLessThanSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cEqualsSignEqualsSignKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cContainsKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//Operator:
		//	'<' | '>' | '==' | 'contains';
		@Override public ParserRule getRule() { return rule; }
		
		//'<' | '>' | '==' | 'contains'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'<'
		public Keyword getLessThanSignKeyword_0() { return cLessThanSignKeyword_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1() { return cGreaterThanSignKeyword_1; }
		
		//'=='
		public Keyword getEqualsSignEqualsSignKeyword_2() { return cEqualsSignEqualsSignKeyword_2; }
		
		//'contains'
		public Keyword getContainsKeyword_3() { return cContainsKeyword_3; }
	}
	
	
	private final ProcessElements pProcess;
	private final TryElements pTry;
	private final FinallyElements pFinally;
	private final CatchElements pCatch;
	private final ActionElements pAction;
	private final SendEMailElements pSendEMail;
	private final DeleteFolderElements pDeleteFolder;
	private final TerminalElements pTerminal;
	private final ExecJavaElements pExecJava;
	private final AbortElements pAbort;
	private final DropfileElements pDropfile;
	private final DoozleElements pDoozle;
	private final FetchElements pFetch;
	private final CallprocessElements pCallprocess;
	private final ForkprocessElements pForkprocess;
	private final CopydataElements pCopydata;
	private final WriteCsvElements pWriteCsv;
	private final LoadCsvElements pLoadCsv;
	private final TransformElements pTransform;
	private final DeleteSqlElements pDeleteSql;
	private final UpdateSqlElements pUpdateSql;
	private final InsertSqlElements pInsertSql;
	private final TruncateSqlElements pTruncateSql;
	private final DropSqlElements pDropSql;
	private final ListFilesElements pListFiles;
	private final Mongo2DbElements pMongo2Db;
	private final FTPElements pFTP;
	private final ZipElements pZip;
	private final UnzipElements pUnzip;
	private final ChecksumElements pChecksum;
	private final JsonTransformElements pJsonTransform;
	private final JsonDeserializeElements pJsonDeserialize;
	private final RestApiElements pRestApi;
	private final PythonElements pPython;
	private final RestElements pRest;
	private final RestPartElements pRestPart;
	private final ColumnElements pColumn;
	private final SelectStatementElements pSelectStatement;
	private final NonSelectStatementElements pNonSelectStatement;
	private final CreateStatementElements pCreateStatement;
	private final ExpressionElements pExpression;
	private final OperatorElements pOperator;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pProcess = new ProcessElements();
		this.pTry = new TryElements();
		this.pFinally = new FinallyElements();
		this.pCatch = new CatchElements();
		this.pAction = new ActionElements();
		this.pSendEMail = new SendEMailElements();
		this.pDeleteFolder = new DeleteFolderElements();
		this.pTerminal = new TerminalElements();
		this.pExecJava = new ExecJavaElements();
		this.pAbort = new AbortElements();
		this.pDropfile = new DropfileElements();
		this.pDoozle = new DoozleElements();
		this.pFetch = new FetchElements();
		this.pCallprocess = new CallprocessElements();
		this.pForkprocess = new ForkprocessElements();
		this.pCopydata = new CopydataElements();
		this.pWriteCsv = new WriteCsvElements();
		this.pLoadCsv = new LoadCsvElements();
		this.pTransform = new TransformElements();
		this.pDeleteSql = new DeleteSqlElements();
		this.pUpdateSql = new UpdateSqlElements();
		this.pInsertSql = new InsertSqlElements();
		this.pTruncateSql = new TruncateSqlElements();
		this.pDropSql = new DropSqlElements();
		this.pListFiles = new ListFilesElements();
		this.pMongo2Db = new Mongo2DbElements();
		this.pFTP = new FTPElements();
		this.pZip = new ZipElements();
		this.pUnzip = new UnzipElements();
		this.pChecksum = new ChecksumElements();
		this.pJsonTransform = new JsonTransformElements();
		this.pJsonDeserialize = new JsonDeserializeElements();
		this.pRestApi = new RestApiElements();
		this.pPython = new PythonElements();
		this.pRest = new RestElements();
		this.pRestPart = new RestPartElements();
		this.pColumn = new ColumnElements();
		this.pSelectStatement = new SelectStatementElements();
		this.pNonSelectStatement = new NonSelectStatementElements();
		this.pCreateStatement = new CreateStatementElements();
		this.pExpression = new ExpressionElements();
		this.pOperator = new OperatorElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("in.handyman.Dsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Process:
	//	'process' name=STRING
	//	'{'
	//	try=Try
	//	catch=Catch
	//	finally=Finally
	//	'}';
	public ProcessElements getProcessAccess() {
		return pProcess;
	}
	
	public ParserRule getProcessRule() {
		return getProcessAccess().getRule();
	}
	
	//Try:
	//	'try'
	//	'{'
	//	action+=Action*
	//	'}';
	public TryElements getTryAccess() {
		return pTry;
	}
	
	public ParserRule getTryRule() {
		return getTryAccess().getRule();
	}
	
	//Finally:
	//	'finally'
	//	'{'
	//	action+=Action*
	//	'}';
	public FinallyElements getFinallyAccess() {
		return pFinally;
	}
	
	public ParserRule getFinallyRule() {
		return getFinallyAccess().getRule();
	}
	
	//Catch:
	//	'catch'
	//	'{'
	//	action+=Action*
	//	'}';
	public CatchElements getCatchAccess() {
		return pCatch;
	}
	
	public ParserRule getCatchRule() {
		return getCatchAccess().getRule();
	}
	
	//Action:
	//	Copydata
	//	| LoadCsv
	//	| WriteCsv
	//	| Transform
	//	| Callprocess
	//	| Forkprocess
	//	| Fetch
	//	| Doozle
	//	| Dropfile
	//	| Abort
	//	| ExecJava
	//	| DeleteFolder
	//	| Terminal
	//	| SendEMail
	//	| Mongo2Db
	//	| FTP
	//	| Unzip
	//	| Zip
	//	| Checksum
	//	| JsonTransform
	//	| RestApi
	//	| Python
	//	| Rest
	//	| JsonDeserialize
	//	| ListFiles
	//	| DeleteSql
	//	| UpdateSql
	//	| InsertSql
	//	| TruncateSql
	//	| DropSql;
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//SendEMail:
	//	'sendemail' 'as' name=STRING 'db' source=STRING 'smtp-host' smtphost=STRING 'smtp-port' smtpport=STRING
	//	'from' from=STRING 'pass' pass=STRING 'to' to=STRING 'cc' cc=STRING
	//	'bcc' bcc=STRING 'subject' subject=STRING 'body' body=STRING 'signature' signature=STRING 'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=Expression;
	public SendEMailElements getSendEMailAccess() {
		return pSendEMail;
	}
	
	public ParserRule getSendEMailRule() {
		return getSendEMailAccess().getRule();
	}
	
	//DeleteFolder:
	//	'deletefolder' 'as' name=STRING 'folder' foldersource=STRING 'zipfile' zipsource=STRING
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=Expression;
	public DeleteFolderElements getDeleteFolderAccess() {
		return pDeleteFolder;
	}
	
	public ParserRule getDeleteFolderRule() {
		return getDeleteFolderAccess().getRule();
	}
	
	//Terminal:
	//	'terminal' 'as' name=STRING 'id' id=STRING 'using'
	//	'{'
	//	value=STRING
	//	'}' 'on-condition' condition=Expression;
	public TerminalElements getTerminalAccess() {
		return pTerminal;
	}
	
	public ParserRule getTerminalRule() {
		return getTerminalAccess().getRule();
	}
	
	//ExecJava:
	//	"java" 'as' name=STRING 'using' classFqn=STRING 'name-sake-db' dbSrc=STRING
	//	'{'
	//	value=STRING
	//	'}' 'on-condition' condition=Expression;
	public ExecJavaElements getExecJavaAccess() {
		return pExecJava;
	}
	
	public ParserRule getExecJavaRule() {
		return getExecJavaAccess().getRule();
	}
	
	//Abort:
	//	'abort' 'as' name=STRING
	//	'{'
	//	value=STRING
	//	'}' 'on-condition' condition=Expression;
	public AbortElements getAbortAccess() {
		return pAbort;
	}
	
	public ParserRule getAbortRule() {
		return getAbortAccess().getRule();
	}
	
	//Dropfile:
	//	'dropfile' 'as' name=STRING 'in-path' target=STRING 'on-condition' condition=Expression;
	public DropfileElements getDropfileAccess() {
		return pDropfile;
	}
	
	public ParserRule getDropfileRule() {
		return getDropfileAccess().getRule();
	}
	
	//Doozle:
	//	'doozle' 'as' name=STRING 'in-table' target=STRING 'on' on=STRING 'using'
	//	'{'
	//	value=CreateStatement
	//	'}' 'on-condition' condition=Expression;
	public DoozleElements getDoozleAccess() {
		return pDoozle;
	}
	
	public ParserRule getDoozleRule() {
		return getDoozleAccess().getRule();
	}
	
	//Fetch:
	//	'assign' 'as' name=STRING 'source' source=STRING 'using'
	//	'{'
	//	value=STRING
	//	'}' 'on-condition' condition=Expression;
	public FetchElements getFetchAccess() {
		return pFetch;
	}
	
	public ParserRule getFetchRule() {
		return getFetchAccess().getRule();
	}
	
	//Callprocess:
	//	'callprocess' 'as' name=STRING 'with-target' target=STRING 'from-file' source=STRING 'using' datasource=STRING
	//	'for-every'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=Expression;
	public CallprocessElements getCallprocessAccess() {
		return pCallprocess;
	}
	
	public ParserRule getCallprocessRule() {
		return getCallprocessAccess().getRule();
	}
	
	//Forkprocess:
	//	'forkprocess' 'as' name=STRING 'with-target' target=STRING 'from-file' source=STRING 'using' datasource=STRING
	//	'for-every'
	//	'{'
	//	value=SelectStatement
	//	'}' 'watermark' forkBatchSize=STRING 'on-condition' condition=Expression;
	public ForkprocessElements getForkprocessAccess() {
		return pForkprocess;
	}
	
	public ParserRule getForkprocessRule() {
		return getForkprocessAccess().getRule();
	}
	
	//Copydata:
	//	'copydata' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'target' target=STRING 'by-batch' limit=STRING
	//	'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=Expression;
	public CopydataElements getCopydataAccess() {
		return pCopydata;
	}
	
	public ParserRule getCopydataRule() {
		return getCopydataAccess().getRule();
	}
	
	//WriteCsv:
	//	'writecsv' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'with' delim=STRING 'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=Expression;
	public WriteCsvElements getWriteCsvAccess() {
		return pWriteCsv;
	}
	
	public ParserRule getWriteCsvRule() {
		return getWriteCsvAccess().getRule();
	}
	
	//LoadCsv:
	//	'loadcsv' 'as' name=STRING 'pid' pid=STRING 'from' source=STRING 'to' to=STRING 'with' delim=STRING 'by-batch'
	//	limit=STRING 'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=Expression;
	public LoadCsvElements getLoadCsvAccess() {
		return pLoadCsv;
	}
	
	public ParserRule getLoadCsvRule() {
		return getLoadCsvAccess().getRule();
	}
	
	//Transform:
	//	'transform' 'as' name=STRING 'on' on=STRING 'using'
	//	'{'
	//	value+=NonSelectStatement
	//	'}' 'on-condition' condition=Expression;
	public TransformElements getTransformAccess() {
		return pTransform;
	}
	
	public ParserRule getTransformRule() {
		return getTransformAccess().getRule();
	}
	
	//DeleteSql:
	//	'deletesql' 'as' name=STRING 'on' on=STRING 'using'
	//	'{'
	//	value+=NonSelectStatement
	//	'}' 'on-condition' condition=Expression;
	public DeleteSqlElements getDeleteSqlAccess() {
		return pDeleteSql;
	}
	
	public ParserRule getDeleteSqlRule() {
		return getDeleteSqlAccess().getRule();
	}
	
	//UpdateSql:
	//	'updatesql' 'as' name=STRING 'on' on=STRING 'using'
	//	'{'
	//	value+=NonSelectStatement
	//	'}' 'on-condition' condition=Expression;
	public UpdateSqlElements getUpdateSqlAccess() {
		return pUpdateSql;
	}
	
	public ParserRule getUpdateSqlRule() {
		return getUpdateSqlAccess().getRule();
	}
	
	//InsertSql:
	//	'insertsql' 'as' name=STRING 'on' on=STRING 'using'
	//	'{'
	//	value+=NonSelectStatement
	//	'}' 'on-condition' condition=Expression;
	public InsertSqlElements getInsertSqlAccess() {
		return pInsertSql;
	}
	
	public ParserRule getInsertSqlRule() {
		return getInsertSqlAccess().getRule();
	}
	
	//TruncateSql:
	//	'truncatesql' 'as' name=STRING 'on' on=STRING 'using'
	//	'{'
	//	value+=NonSelectStatement
	//	'}' 'on-condition' condition=Expression;
	public TruncateSqlElements getTruncateSqlAccess() {
		return pTruncateSql;
	}
	
	public ParserRule getTruncateSqlRule() {
		return getTruncateSqlAccess().getRule();
	}
	
	//DropSql:
	//	'dropsql' 'as' name=STRING 'on' on=STRING 'using'
	//	'{'
	//	value+=NonSelectStatement
	//	'}' 'on-condition' condition=Expression;
	public DropSqlElements getDropSqlAccess() {
		return pDropSql;
	}
	
	public ParserRule getDropSqlRule() {
		return getDropSqlAccess().getRule();
	}
	
	//ListFiles:
	//	'listfiles' 'as' name=STRING 'from' source=STRING 'on' to=STRING 'target-table' targetTable=STRING 'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=Expression;
	public ListFilesElements getListFilesAccess() {
		return pListFiles;
	}
	
	public ParserRule getListFilesRule() {
		return getListFilesAccess().getRule();
	}
	
	//Mongo2Db:
	//	'mongo2db' 'as' name=STRING 'from' sourceConnStr=STRING 'to' to=STRING 'srcDb' sourceDb=STRING 'targetDb'
	//	targetDb=STRING 'targetTable' targetTable=STRING
	//	'by-filter' filter=STRING 'by-batch' limit=STRING 'find-attribute' findAttr=STRING 'apply-manipulation'
	//	applyManipulation=STRING
	//	'on-updatekey' onUpdateKey=STRING 'with-fetch-batch-size' fetchBatchSize=STRING 'with-write-batch-size'
	//	writeBatchSize=STRING
	//	'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=Expression;
	public Mongo2DbElements getMongo2DbAccess() {
		return pMongo2Db;
	}
	
	public ParserRule getMongo2DbRule() {
		return getMongo2DbAccess().getRule();
	}
	
	//FTP:
	//	'ftp' 'as' name=STRING 'host' host=STRING 'port' port=STRING 'username' username=STRING 'password' password=STRING
	//	'action' action=STRING 'local-dir' localDir=STRING 'local-file' localFile=STRING 'remote-dir' remoteDir=STRING
	//	'remote-file'
	//	remoteFile=STRING 'from' source=STRING 'target-table' targetTable=STRING 'using'
	//	'{'
	//	value=STRING
	//	'}' 'on-condition' condition=Expression;
	public FTPElements getFTPAccess() {
		return pFTP;
	}
	
	public ParserRule getFTPRule() {
		return getFTPAccess().getRule();
	}
	
	//Zip:
	//	'zip' 'as' name=STRING 'zip-file-path' zipFilePath=STRING 'zip-file-name' zipFileName=STRING 'source' source=STRING
	//	'buffer-size' bufferSize=STRING 'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=Expression;
	public ZipElements getZipAccess() {
		return pZip;
	}
	
	public ParserRule getZipRule() {
		return getZipAccess().getRule();
	}
	
	//Unzip:
	//	'unzip' 'as' name=STRING 'source' source=STRING 'dest-dir' destDir=STRING 'buffer-size' bufferSize=STRING 'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=Expression;
	public UnzipElements getUnzipAccess() {
		return pUnzip;
	}
	
	public ParserRule getUnzipRule() {
		return getUnzipAccess().getRule();
	}
	
	//Checksum:
	//	'checksum' 'as' name=STRING 'host' host=STRING 'port' port=STRING 'username' username=STRING 'password'
	//	password=STRING
	//	'local-dir' localDir=STRING 'local-file' localFile=STRING 'remote-dir' remoteDir=STRING 'remote-file'
	//	remoteFile=STRING 'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=Expression;
	public ChecksumElements getChecksumAccess() {
		return pChecksum;
	}
	
	public ParserRule getChecksumRule() {
		return getChecksumAccess().getRule();
	}
	
	//JsonTransform:
	//	'jsontransform' 'as' name=STRING 'from' source=STRING 'target-table' targetTable=STRING 'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=Expression;
	public JsonTransformElements getJsonTransformAccess() {
		return pJsonTransform;
	}
	
	public ParserRule getJsonTransformRule() {
		return getJsonTransformAccess().getRule();
	}
	
	//JsonDeserialize:
	//	'jsondeserialize' 'as' name=STRING 'from' source=STRING 'target-table' targetTable=STRING 'input' input=STRING
	//	'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=Expression;
	public JsonDeserializeElements getJsonDeserializeAccess() {
		return pJsonDeserialize;
	}
	
	public ParserRule getJsonDeserializeRule() {
		return getJsonDeserializeAccess().getRule();
	}
	
	//RestApi:
	//	'restapi' 'as' name=STRING 'url' url=STRING 'method' method=STRING 'property' property=STRING 'payload'
	//	payload=STRING
	//	'from' source=STRING 'target-table' targetTable=STRING 'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=Expression;
	public RestApiElements getRestApiAccess() {
		return pRestApi;
	}
	
	public ParserRule getRestApiRule() {
		return getRestApiAccess().getRule();
	}
	
	//Python:
	//	'python' 'as' name=STRING 'from' source=STRING 'target' target=STRING 'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=Expression;
	public PythonElements getPythonAccess() {
		return pPython;
	}
	
	public ParserRule getPythonRule() {
		return getPythonAccess().getRule();
	}
	
	//Rest:
	//	'rest' 'as' name=STRING 'secured-by' authtoken=STRING 'with-url' url=STRING 'and-method-as' method=STRING
	//	'{'
	//	'from' resourcedatafrom=STRING 'update-url-with' '{'
	//	urldata=SelectStatement
	//	'}'
	//	'from' headerdatafrom=STRING 'update-header-with' '{'
	//	headerdata=SelectStatement
	//	'}'
	//	'from' postdatafrom=STRING 'update-body-with' '{'
	//	'parent' 'as' parentName=STRING parentdata=SelectStatement
	//	parts+=RestPart*
	//	'}'
	//	'into' ackdatato=STRING 'store-ack-at' '{'
	//	ackdata=SelectStatement
	//	'}'
	//	'}' 'on-condition' condition=Expression;
	public RestElements getRestAccess() {
		return pRest;
	}
	
	public ParserRule getRestRule() {
		return getRestAccess().getRule();
	}
	
	//RestPart:
	//	'part' 'as' partName=STRING 'with' partData=SelectStatement;
	public RestPartElements getRestPartAccess() {
		return pRestPart;
	}
	
	public ParserRule getRestPartRule() {
		return getRestPartAccess().getRule();
	}
	
	//Column:
	//	STRING;
	public ColumnElements getColumnAccess() {
		return pColumn;
	}
	
	public ParserRule getColumnRule() {
		return getColumnAccess().getRule();
	}
	
	//SelectStatement:
	//	STRING;
	public SelectStatementElements getSelectStatementAccess() {
		return pSelectStatement;
	}
	
	public ParserRule getSelectStatementRule() {
		return getSelectStatementAccess().getRule();
	}
	
	//NonSelectStatement:
	//	STRING;
	public NonSelectStatementElements getNonSelectStatementAccess() {
		return pNonSelectStatement;
	}
	
	public ParserRule getNonSelectStatementRule() {
		return getNonSelectStatementAccess().getRule();
	}
	
	//CreateStatement:
	//	STRING;
	public CreateStatementElements getCreateStatementAccess() {
		return pCreateStatement;
	}
	
	public ParserRule getCreateStatementRule() {
		return getCreateStatementAccess().getRule();
	}
	
	//Expression:
	//	'if' lhs=STRING operator=Operator rhs=STRING;
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	//Operator:
	//	'<' | '>' | '==' | 'contains';
	public OperatorElements getOperatorAccess() {
		return pOperator;
	}
	
	public ParserRule getOperatorRule() {
		return getOperatorAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
