/**
 * generated by Xtext 2.16.0
 */
package in.handyman.dsl.impl;

import in.handyman.dsl.DslPackage;
import in.handyman.dsl.Zip;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Zip</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link in.handyman.dsl.impl.ZipImpl#getZipFilePath <em>Zip File Path</em>}</li>
 *   <li>{@link in.handyman.dsl.impl.ZipImpl#getZipFileName <em>Zip File Name</em>}</li>
 *   <li>{@link in.handyman.dsl.impl.ZipImpl#getSource <em>Source</em>}</li>
 *   <li>{@link in.handyman.dsl.impl.ZipImpl#getBufferSize <em>Buffer Size</em>}</li>
 *   <li>{@link in.handyman.dsl.impl.ZipImpl#getValue <em>Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ZipImpl extends ActionImpl implements Zip
{
  /**
   * The default value of the '{@link #getZipFilePath() <em>Zip File Path</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getZipFilePath()
   * @generated
   * @ordered
   */
  protected static final String ZIP_FILE_PATH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getZipFilePath() <em>Zip File Path</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getZipFilePath()
   * @generated
   * @ordered
   */
  protected String zipFilePath = ZIP_FILE_PATH_EDEFAULT;

  /**
   * The default value of the '{@link #getZipFileName() <em>Zip File Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getZipFileName()
   * @generated
   * @ordered
   */
  protected static final String ZIP_FILE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getZipFileName() <em>Zip File Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getZipFileName()
   * @generated
   * @ordered
   */
  protected String zipFileName = ZIP_FILE_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getSource() <em>Source</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSource()
   * @generated
   * @ordered
   */
  protected static final String SOURCE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSource() <em>Source</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSource()
   * @generated
   * @ordered
   */
  protected String source = SOURCE_EDEFAULT;

  /**
   * The default value of the '{@link #getBufferSize() <em>Buffer Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBufferSize()
   * @generated
   * @ordered
   */
  protected static final String BUFFER_SIZE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBufferSize() <em>Buffer Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBufferSize()
   * @generated
   * @ordered
   */
  protected String bufferSize = BUFFER_SIZE_EDEFAULT;

  /**
   * The default value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected static final String VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected String value = VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ZipImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.Literals.ZIP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getZipFilePath()
  {
    return zipFilePath;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setZipFilePath(String newZipFilePath)
  {
    String oldZipFilePath = zipFilePath;
    zipFilePath = newZipFilePath;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.ZIP__ZIP_FILE_PATH, oldZipFilePath, zipFilePath));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getZipFileName()
  {
    return zipFileName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setZipFileName(String newZipFileName)
  {
    String oldZipFileName = zipFileName;
    zipFileName = newZipFileName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.ZIP__ZIP_FILE_NAME, oldZipFileName, zipFileName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSource()
  {
    return source;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSource(String newSource)
  {
    String oldSource = source;
    source = newSource;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.ZIP__SOURCE, oldSource, source));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBufferSize()
  {
    return bufferSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBufferSize(String newBufferSize)
  {
    String oldBufferSize = bufferSize;
    bufferSize = newBufferSize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.ZIP__BUFFER_SIZE, oldBufferSize, bufferSize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue(String newValue)
  {
    String oldValue = value;
    value = newValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.ZIP__VALUE, oldValue, value));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.ZIP__ZIP_FILE_PATH:
        return getZipFilePath();
      case DslPackage.ZIP__ZIP_FILE_NAME:
        return getZipFileName();
      case DslPackage.ZIP__SOURCE:
        return getSource();
      case DslPackage.ZIP__BUFFER_SIZE:
        return getBufferSize();
      case DslPackage.ZIP__VALUE:
        return getValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.ZIP__ZIP_FILE_PATH:
        setZipFilePath((String)newValue);
        return;
      case DslPackage.ZIP__ZIP_FILE_NAME:
        setZipFileName((String)newValue);
        return;
      case DslPackage.ZIP__SOURCE:
        setSource((String)newValue);
        return;
      case DslPackage.ZIP__BUFFER_SIZE:
        setBufferSize((String)newValue);
        return;
      case DslPackage.ZIP__VALUE:
        setValue((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.ZIP__ZIP_FILE_PATH:
        setZipFilePath(ZIP_FILE_PATH_EDEFAULT);
        return;
      case DslPackage.ZIP__ZIP_FILE_NAME:
        setZipFileName(ZIP_FILE_NAME_EDEFAULT);
        return;
      case DslPackage.ZIP__SOURCE:
        setSource(SOURCE_EDEFAULT);
        return;
      case DslPackage.ZIP__BUFFER_SIZE:
        setBufferSize(BUFFER_SIZE_EDEFAULT);
        return;
      case DslPackage.ZIP__VALUE:
        setValue(VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.ZIP__ZIP_FILE_PATH:
        return ZIP_FILE_PATH_EDEFAULT == null ? zipFilePath != null : !ZIP_FILE_PATH_EDEFAULT.equals(zipFilePath);
      case DslPackage.ZIP__ZIP_FILE_NAME:
        return ZIP_FILE_NAME_EDEFAULT == null ? zipFileName != null : !ZIP_FILE_NAME_EDEFAULT.equals(zipFileName);
      case DslPackage.ZIP__SOURCE:
        return SOURCE_EDEFAULT == null ? source != null : !SOURCE_EDEFAULT.equals(source);
      case DslPackage.ZIP__BUFFER_SIZE:
        return BUFFER_SIZE_EDEFAULT == null ? bufferSize != null : !BUFFER_SIZE_EDEFAULT.equals(bufferSize);
      case DslPackage.ZIP__VALUE:
        return VALUE_EDEFAULT == null ? value != null : !VALUE_EDEFAULT.equals(value);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (zipFilePath: ");
    result.append(zipFilePath);
    result.append(", zipFileName: ");
    result.append(zipFileName);
    result.append(", source: ");
    result.append(source);
    result.append(", bufferSize: ");
    result.append(bufferSize);
    result.append(", value: ");
    result.append(value);
    result.append(')');
    return result.toString();
  }

} //ZipImpl
