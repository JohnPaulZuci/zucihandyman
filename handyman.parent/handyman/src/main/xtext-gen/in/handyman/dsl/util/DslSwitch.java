/**
 * generated by Xtext 2.16.0
 */
package in.handyman.dsl.util;

import in.handyman.dsl.Abort;
import in.handyman.dsl.Action;
import in.handyman.dsl.Callprocess;
import in.handyman.dsl.Catch;
import in.handyman.dsl.Checksum;
import in.handyman.dsl.Copydata;
import in.handyman.dsl.DeleteFolder;
import in.handyman.dsl.DeleteSql;
import in.handyman.dsl.Doozle;
import in.handyman.dsl.DropSql;
import in.handyman.dsl.Dropfile;
import in.handyman.dsl.DslPackage;
import in.handyman.dsl.ExecJava;
import in.handyman.dsl.Expression;
import in.handyman.dsl.FTP;
import in.handyman.dsl.Fetch;
import in.handyman.dsl.Finally;
import in.handyman.dsl.Forkprocess;
import in.handyman.dsl.InsertSql;
import in.handyman.dsl.JsonDeserialize;
import in.handyman.dsl.JsonTransform;
import in.handyman.dsl.ListFiles;
import in.handyman.dsl.LoadCsv;
import in.handyman.dsl.Mongo2Db;
import in.handyman.dsl.Python;
import in.handyman.dsl.Rest;
import in.handyman.dsl.RestApi;
import in.handyman.dsl.RestPart;
import in.handyman.dsl.SendEMail;
import in.handyman.dsl.Terminal;
import in.handyman.dsl.Transform;
import in.handyman.dsl.TruncateSql;
import in.handyman.dsl.Try;
import in.handyman.dsl.Unzip;
import in.handyman.dsl.UpdateSql;
import in.handyman.dsl.WriteCsv;
import in.handyman.dsl.Zip;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see in.handyman.dsl.DslPackage
 * @generated
 */
public class DslSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static DslPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DslSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = DslPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case DslPackage.PROCESS:
      {
        in.handyman.dsl.Process process = (in.handyman.dsl.Process)theEObject;
        T result = caseProcess(process);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.TRY:
      {
        Try try_ = (Try)theEObject;
        T result = caseTry(try_);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.FINALLY:
      {
        Finally finally_ = (Finally)theEObject;
        T result = caseFinally(finally_);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.CATCH:
      {
        Catch catch_ = (Catch)theEObject;
        T result = caseCatch(catch_);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.ACTION:
      {
        Action action = (Action)theEObject;
        T result = caseAction(action);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.SEND_EMAIL:
      {
        SendEMail sendEMail = (SendEMail)theEObject;
        T result = caseSendEMail(sendEMail);
        if (result == null) result = caseAction(sendEMail);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.DELETE_FOLDER:
      {
        DeleteFolder deleteFolder = (DeleteFolder)theEObject;
        T result = caseDeleteFolder(deleteFolder);
        if (result == null) result = caseAction(deleteFolder);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.TERMINAL:
      {
        Terminal terminal = (Terminal)theEObject;
        T result = caseTerminal(terminal);
        if (result == null) result = caseAction(terminal);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.EXEC_JAVA:
      {
        ExecJava execJava = (ExecJava)theEObject;
        T result = caseExecJava(execJava);
        if (result == null) result = caseAction(execJava);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.ABORT:
      {
        Abort abort = (Abort)theEObject;
        T result = caseAbort(abort);
        if (result == null) result = caseAction(abort);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.DROPFILE:
      {
        Dropfile dropfile = (Dropfile)theEObject;
        T result = caseDropfile(dropfile);
        if (result == null) result = caseAction(dropfile);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.DOOZLE:
      {
        Doozle doozle = (Doozle)theEObject;
        T result = caseDoozle(doozle);
        if (result == null) result = caseAction(doozle);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.FETCH:
      {
        Fetch fetch = (Fetch)theEObject;
        T result = caseFetch(fetch);
        if (result == null) result = caseAction(fetch);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.CALLPROCESS:
      {
        Callprocess callprocess = (Callprocess)theEObject;
        T result = caseCallprocess(callprocess);
        if (result == null) result = caseAction(callprocess);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.FORKPROCESS:
      {
        Forkprocess forkprocess = (Forkprocess)theEObject;
        T result = caseForkprocess(forkprocess);
        if (result == null) result = caseAction(forkprocess);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.COPYDATA:
      {
        Copydata copydata = (Copydata)theEObject;
        T result = caseCopydata(copydata);
        if (result == null) result = caseAction(copydata);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.WRITE_CSV:
      {
        WriteCsv writeCsv = (WriteCsv)theEObject;
        T result = caseWriteCsv(writeCsv);
        if (result == null) result = caseAction(writeCsv);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.LOAD_CSV:
      {
        LoadCsv loadCsv = (LoadCsv)theEObject;
        T result = caseLoadCsv(loadCsv);
        if (result == null) result = caseAction(loadCsv);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.TRANSFORM:
      {
        Transform transform = (Transform)theEObject;
        T result = caseTransform(transform);
        if (result == null) result = caseAction(transform);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.DELETE_SQL:
      {
        DeleteSql deleteSql = (DeleteSql)theEObject;
        T result = caseDeleteSql(deleteSql);
        if (result == null) result = caseAction(deleteSql);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.UPDATE_SQL:
      {
        UpdateSql updateSql = (UpdateSql)theEObject;
        T result = caseUpdateSql(updateSql);
        if (result == null) result = caseAction(updateSql);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.INSERT_SQL:
      {
        InsertSql insertSql = (InsertSql)theEObject;
        T result = caseInsertSql(insertSql);
        if (result == null) result = caseAction(insertSql);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.TRUNCATE_SQL:
      {
        TruncateSql truncateSql = (TruncateSql)theEObject;
        T result = caseTruncateSql(truncateSql);
        if (result == null) result = caseAction(truncateSql);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.DROP_SQL:
      {
        DropSql dropSql = (DropSql)theEObject;
        T result = caseDropSql(dropSql);
        if (result == null) result = caseAction(dropSql);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.LIST_FILES:
      {
        ListFiles listFiles = (ListFiles)theEObject;
        T result = caseListFiles(listFiles);
        if (result == null) result = caseAction(listFiles);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MONGO2_DB:
      {
        Mongo2Db mongo2Db = (Mongo2Db)theEObject;
        T result = caseMongo2Db(mongo2Db);
        if (result == null) result = caseAction(mongo2Db);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.FTP:
      {
        FTP ftp = (FTP)theEObject;
        T result = caseFTP(ftp);
        if (result == null) result = caseAction(ftp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.ZIP:
      {
        Zip zip = (Zip)theEObject;
        T result = caseZip(zip);
        if (result == null) result = caseAction(zip);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.UNZIP:
      {
        Unzip unzip = (Unzip)theEObject;
        T result = caseUnzip(unzip);
        if (result == null) result = caseAction(unzip);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.CHECKSUM:
      {
        Checksum checksum = (Checksum)theEObject;
        T result = caseChecksum(checksum);
        if (result == null) result = caseAction(checksum);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.JSON_TRANSFORM:
      {
        JsonTransform jsonTransform = (JsonTransform)theEObject;
        T result = caseJsonTransform(jsonTransform);
        if (result == null) result = caseAction(jsonTransform);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.JSON_DESERIALIZE:
      {
        JsonDeserialize jsonDeserialize = (JsonDeserialize)theEObject;
        T result = caseJsonDeserialize(jsonDeserialize);
        if (result == null) result = caseAction(jsonDeserialize);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.REST_API:
      {
        RestApi restApi = (RestApi)theEObject;
        T result = caseRestApi(restApi);
        if (result == null) result = caseAction(restApi);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.PYTHON:
      {
        Python python = (Python)theEObject;
        T result = casePython(python);
        if (result == null) result = caseAction(python);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.REST:
      {
        Rest rest = (Rest)theEObject;
        T result = caseRest(rest);
        if (result == null) result = caseAction(rest);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.REST_PART:
      {
        RestPart restPart = (RestPart)theEObject;
        T result = caseRestPart(restPart);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.EXPRESSION:
      {
        Expression expression = (Expression)theEObject;
        T result = caseExpression(expression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Process</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Process</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProcess(in.handyman.dsl.Process object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Try</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Try</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTry(Try object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Finally</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Finally</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFinally(Finally object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Catch</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Catch</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCatch(Catch object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAction(Action object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Send EMail</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Send EMail</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSendEMail(SendEMail object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Delete Folder</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Delete Folder</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeleteFolder(DeleteFolder object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Terminal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Terminal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTerminal(Terminal object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Exec Java</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Exec Java</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExecJava(ExecJava object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Abort</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Abort</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAbort(Abort object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Dropfile</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Dropfile</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDropfile(Dropfile object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Doozle</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Doozle</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDoozle(Doozle object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Fetch</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Fetch</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFetch(Fetch object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Callprocess</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Callprocess</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCallprocess(Callprocess object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Forkprocess</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Forkprocess</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseForkprocess(Forkprocess object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Copydata</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Copydata</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCopydata(Copydata object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Write Csv</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Write Csv</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWriteCsv(WriteCsv object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Load Csv</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Load Csv</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLoadCsv(LoadCsv object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Transform</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Transform</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTransform(Transform object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Delete Sql</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Delete Sql</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeleteSql(DeleteSql object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Update Sql</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Update Sql</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUpdateSql(UpdateSql object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Insert Sql</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Insert Sql</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInsertSql(InsertSql object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Truncate Sql</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Truncate Sql</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTruncateSql(TruncateSql object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Drop Sql</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Drop Sql</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDropSql(DropSql object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>List Files</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>List Files</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseListFiles(ListFiles object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mongo2 Db</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mongo2 Db</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMongo2Db(Mongo2Db object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FTP</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FTP</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFTP(FTP object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Zip</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Zip</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseZip(Zip object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Unzip</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Unzip</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUnzip(Unzip object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Checksum</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Checksum</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseChecksum(Checksum object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Json Transform</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Json Transform</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJsonTransform(JsonTransform object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Json Deserialize</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Json Deserialize</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJsonDeserialize(JsonDeserialize object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rest Api</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rest Api</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRestApi(RestApi object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Python</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Python</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePython(Python object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rest</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rest</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRest(Rest object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rest Part</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rest Part</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRestPart(RestPart object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpression(Expression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //DslSwitch
