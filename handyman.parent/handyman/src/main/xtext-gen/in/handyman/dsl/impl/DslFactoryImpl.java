/**
 * generated by Xtext 2.16.0
 */
package in.handyman.dsl.impl;

import in.handyman.dsl.Abort;
import in.handyman.dsl.Action;
import in.handyman.dsl.Callprocess;
import in.handyman.dsl.Catch;
import in.handyman.dsl.Checksum;
import in.handyman.dsl.Copydata;
import in.handyman.dsl.DeleteFolder;
import in.handyman.dsl.DeleteSql;
import in.handyman.dsl.Doozle;
import in.handyman.dsl.DropSql;
import in.handyman.dsl.Dropfile;
import in.handyman.dsl.DslFactory;
import in.handyman.dsl.DslPackage;
import in.handyman.dsl.ExecJava;
import in.handyman.dsl.Expression;
import in.handyman.dsl.FTP;
import in.handyman.dsl.Fetch;
import in.handyman.dsl.Finally;
import in.handyman.dsl.Forkprocess;
import in.handyman.dsl.InsertSql;
import in.handyman.dsl.JsonDeserialize;
import in.handyman.dsl.JsonTransform;
import in.handyman.dsl.ListFiles;
import in.handyman.dsl.LoadCsv;
import in.handyman.dsl.Mongo2Db;
import in.handyman.dsl.Python;
import in.handyman.dsl.Rest;
import in.handyman.dsl.RestApi;
import in.handyman.dsl.RestPart;
import in.handyman.dsl.SendEMail;
import in.handyman.dsl.Terminal;
import in.handyman.dsl.Transform;
import in.handyman.dsl.TruncateSql;
import in.handyman.dsl.Try;
import in.handyman.dsl.Unzip;
import in.handyman.dsl.UpdateSql;
import in.handyman.dsl.WriteCsv;
import in.handyman.dsl.Zip;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DslFactoryImpl extends EFactoryImpl implements DslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static DslFactory init()
  {
    try
    {
      DslFactory theDslFactory = (DslFactory)EPackage.Registry.INSTANCE.getEFactory(DslPackage.eNS_URI);
      if (theDslFactory != null)
      {
        return theDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new DslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case DslPackage.PROCESS: return createProcess();
      case DslPackage.TRY: return createTry();
      case DslPackage.FINALLY: return createFinally();
      case DslPackage.CATCH: return createCatch();
      case DslPackage.ACTION: return createAction();
      case DslPackage.SEND_EMAIL: return createSendEMail();
      case DslPackage.DELETE_FOLDER: return createDeleteFolder();
      case DslPackage.TERMINAL: return createTerminal();
      case DslPackage.EXEC_JAVA: return createExecJava();
      case DslPackage.ABORT: return createAbort();
      case DslPackage.DROPFILE: return createDropfile();
      case DslPackage.DOOZLE: return createDoozle();
      case DslPackage.FETCH: return createFetch();
      case DslPackage.CALLPROCESS: return createCallprocess();
      case DslPackage.FORKPROCESS: return createForkprocess();
      case DslPackage.COPYDATA: return createCopydata();
      case DslPackage.WRITE_CSV: return createWriteCsv();
      case DslPackage.LOAD_CSV: return createLoadCsv();
      case DslPackage.TRANSFORM: return createTransform();
      case DslPackage.DELETE_SQL: return createDeleteSql();
      case DslPackage.UPDATE_SQL: return createUpdateSql();
      case DslPackage.INSERT_SQL: return createInsertSql();
      case DslPackage.TRUNCATE_SQL: return createTruncateSql();
      case DslPackage.DROP_SQL: return createDropSql();
      case DslPackage.LIST_FILES: return createListFiles();
      case DslPackage.MONGO2_DB: return createMongo2Db();
      case DslPackage.FTP: return createFTP();
      case DslPackage.ZIP: return createZip();
      case DslPackage.UNZIP: return createUnzip();
      case DslPackage.CHECKSUM: return createChecksum();
      case DslPackage.JSON_TRANSFORM: return createJsonTransform();
      case DslPackage.JSON_DESERIALIZE: return createJsonDeserialize();
      case DslPackage.REST_API: return createRestApi();
      case DslPackage.PYTHON: return createPython();
      case DslPackage.REST: return createRest();
      case DslPackage.REST_PART: return createRestPart();
      case DslPackage.EXPRESSION: return createExpression();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public in.handyman.dsl.Process createProcess()
  {
    ProcessImpl process = new ProcessImpl();
    return process;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Try createTry()
  {
    TryImpl try_ = new TryImpl();
    return try_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Finally createFinally()
  {
    FinallyImpl finally_ = new FinallyImpl();
    return finally_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Catch createCatch()
  {
    CatchImpl catch_ = new CatchImpl();
    return catch_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Action createAction()
  {
    ActionImpl action = new ActionImpl();
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SendEMail createSendEMail()
  {
    SendEMailImpl sendEMail = new SendEMailImpl();
    return sendEMail;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DeleteFolder createDeleteFolder()
  {
    DeleteFolderImpl deleteFolder = new DeleteFolderImpl();
    return deleteFolder;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Terminal createTerminal()
  {
    TerminalImpl terminal = new TerminalImpl();
    return terminal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExecJava createExecJava()
  {
    ExecJavaImpl execJava = new ExecJavaImpl();
    return execJava;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Abort createAbort()
  {
    AbortImpl abort = new AbortImpl();
    return abort;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Dropfile createDropfile()
  {
    DropfileImpl dropfile = new DropfileImpl();
    return dropfile;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Doozle createDoozle()
  {
    DoozleImpl doozle = new DoozleImpl();
    return doozle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Fetch createFetch()
  {
    FetchImpl fetch = new FetchImpl();
    return fetch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Callprocess createCallprocess()
  {
    CallprocessImpl callprocess = new CallprocessImpl();
    return callprocess;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Forkprocess createForkprocess()
  {
    ForkprocessImpl forkprocess = new ForkprocessImpl();
    return forkprocess;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Copydata createCopydata()
  {
    CopydataImpl copydata = new CopydataImpl();
    return copydata;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WriteCsv createWriteCsv()
  {
    WriteCsvImpl writeCsv = new WriteCsvImpl();
    return writeCsv;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LoadCsv createLoadCsv()
  {
    LoadCsvImpl loadCsv = new LoadCsvImpl();
    return loadCsv;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Transform createTransform()
  {
    TransformImpl transform = new TransformImpl();
    return transform;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DeleteSql createDeleteSql()
  {
    DeleteSqlImpl deleteSql = new DeleteSqlImpl();
    return deleteSql;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UpdateSql createUpdateSql()
  {
    UpdateSqlImpl updateSql = new UpdateSqlImpl();
    return updateSql;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InsertSql createInsertSql()
  {
    InsertSqlImpl insertSql = new InsertSqlImpl();
    return insertSql;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TruncateSql createTruncateSql()
  {
    TruncateSqlImpl truncateSql = new TruncateSqlImpl();
    return truncateSql;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DropSql createDropSql()
  {
    DropSqlImpl dropSql = new DropSqlImpl();
    return dropSql;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ListFiles createListFiles()
  {
    ListFilesImpl listFiles = new ListFilesImpl();
    return listFiles;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Mongo2Db createMongo2Db()
  {
    Mongo2DbImpl mongo2Db = new Mongo2DbImpl();
    return mongo2Db;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FTP createFTP()
  {
    FTPImpl ftp = new FTPImpl();
    return ftp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Zip createZip()
  {
    ZipImpl zip = new ZipImpl();
    return zip;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Unzip createUnzip()
  {
    UnzipImpl unzip = new UnzipImpl();
    return unzip;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Checksum createChecksum()
  {
    ChecksumImpl checksum = new ChecksumImpl();
    return checksum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JsonTransform createJsonTransform()
  {
    JsonTransformImpl jsonTransform = new JsonTransformImpl();
    return jsonTransform;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JsonDeserialize createJsonDeserialize()
  {
    JsonDeserializeImpl jsonDeserialize = new JsonDeserializeImpl();
    return jsonDeserialize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RestApi createRestApi()
  {
    RestApiImpl restApi = new RestApiImpl();
    return restApi;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Python createPython()
  {
    PythonImpl python = new PythonImpl();
    return python;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Rest createRest()
  {
    RestImpl rest = new RestImpl();
    return rest;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RestPart createRestPart()
  {
    RestPartImpl restPart = new RestPartImpl();
    return restPart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression createExpression()
  {
    ExpressionImpl expression = new ExpressionImpl();
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DslPackage getDslPackage()
  {
    return (DslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static DslPackage getPackage()
  {
    return DslPackage.eINSTANCE;
  }

} //DslFactoryImpl
